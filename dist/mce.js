/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/app-bar/app-bar.js":
/*!********************************!*\
  !*** ./src/app-bar/app-bar.js ***!
  \********************************/
/*! exports provided: AppBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AppBar\", function() { return AppBar; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * The app bar is a special kind of toolbar thatâ€™s used for branding, navigation, search, and actions.\n *\n * [Material Design Spec](https://material-components.github.io/material-components-web-catalog/#/component/top-app-bar)\n * \n * ### example\n * ```\n * <mce-app-bar app-title=\"app-bar\" class=\"mce-light\">\n *   <div class=\"mce-nav-icon\">\n *     <mce-icon>menu</mce-icon>\n *   </div>\n *   <span class=\"mce-title\">App Bar Light</span>\n *   <div class=\"mce-icons\">\n *     <mce-icon>favorite</mce-icon>\n *     <mce-icon>search</mce-icon>\n *     <mce-icon>more_vert</mce-icon>\n *   </div>\n * </mce-app-bar>\n * ```\n *\n * <iframe height='265' scrolling='no' title='mce an-app-bar' src='//codepen.io/allenhwkim/embed/EobYmr/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/EobYmr/'>mce an-app-bar</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-app-bar` style classes\n *  |name|value|description|\n *  |---|---|---|\n *  |mce-light| | if defined, light background with dark icons and text\n * \n * \n * ### Child element of `mce-app-bar` style classes\n *  |name|value|description|\n *  |---|---|---|\n *  |mce-nav-icon| | the container class of left-side navigation icon(s)\n *  |mce-icons| | the container class of right-side icons\n *  |mce-title| | the container class of title, which is positioned after navigation icons\n *\n */\nclass AppBar extends HTMLElement {\n  connectedCallback() {\n    if (window.ce && window.ce.resizeHandler) {} else {\n      window.ce = { resizeHandler: _utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"windowResizeHandler\"] };\n      window.addEventListener('resize', window.ce.resizeHandler);\n      window.addEventListener('load', window.ce.resizeHandler);\n    }\n    this._addFiller();\n  }\n\n  /**\n   * sets the title of app bar\n   * @param {string} title title for the app bar\n   */\n  setTitle(title) {\n    this.querySelector('.mce-title').innerHTML = title;\n  }\n\n  _addFiller() {\n    let el = document.createElement('div');\n    el.classList.add('mce-app-bar-filler');\n    this.parentElement.insertBefore(el, this.nextSibling);\n  }\n}\n\ncustomElements.define('mce-app-bar', AppBar);\n\n//# sourceURL=webpack:///./src/app-bar/app-bar.js?");

/***/ }),

/***/ "./src/blocker/blocker.js":
/*!********************************!*\
  !*** ./src/blocker/blocker.js ***!
  \********************************/
/*! exports provided: Blocker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Blocker\", function() { return Blocker; });\n/**\n * An element that covers the another element.\n * Useful to show that the block is loading\n *\n * ### example\n * ```\n * <div>\n *   <mce-blocker>\n *     <mce-refresh-indicator mce-no-border mce-loading></mce-refresh-indicator>\n *   </mce-blocker>\n * </div>\n * ```\n *\n * <iframe height='265' scrolling='no' title='GyBeMz' src='//codepen.io/allenhwkim/embed/GyBeMz/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/GyBeMz/'>GyBeMz</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-blocker` classes\n *  |name|description|\n *  |---|---|\n *  |mce-visible| if given, the blocker is displayed\n *\n */\nclass Blocker extends HTMLElement {\n  connectedCallback() {\n    this.classList.contains('mce-visible') && this.open();\n  }\n\n  open() {\n    //works as a blocker\n    let elStyle = window.getComputedStyle(this.parentElement);\n    let position = elStyle.getPropertyValue(\"position\");\n    let notPositioned = ['static'].includes(position); // static, relative, fixed, absolute, sticky\n    let css = {\n      position: 'absolute',\n      backgroundColor: 'rgba(0,0,0,0.2)',\n      top: notPositioned ? this.parentElement.offsetTop + 'px' : '0px',\n      left: notPositioned ? this.parentElement.offsetLeft + 'px' : '0px',\n      width: this.parentElement.offsetWidth + 'px',\n      height: this.parentElement.offsetHeight + 'px',\n      borderRadius: elStyle.borderRadius\n    };\n\n    Object.assign(this.style, css);\n    this.classList.add('mce-visible');\n  }\n\n  close() {\n    this.classList.remove('mce-visible');\n  }\n}\n\ncustomElements.define('mce-blocker', Blocker);\n\n//# sourceURL=webpack:///./src/blocker/blocker.js?");

/***/ }),

/***/ "./src/bottom-nav-bar/bottom-nav-bar.js":
/*!**********************************************!*\
  !*** ./src/bottom-nav-bar/bottom-nav-bar.js ***!
  \**********************************************/
/*! exports provided: BottomNavBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BottomNavBar\", function() { return BottomNavBar; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * Bottom navigation bars make it easy to explore and switch between top-level views in a single tap.\n *\n * [Material Design Spec.](https://material.io/guidelines/components/bottom-navigation.html#bottom-navigation-specs)\n * \n * ## Example\n * ```\n * <mce-bottom-nav-bar>\n *   <mce-nav-item icon=\"favorite\">Favourite</mce-nav-item>\n *   <mce-nav-item icon=\"search\" class=\"mce-disabled\">Disabled</mce-nav-item>\n *   <mce-nav-item icon=\"alarm\">Alarm</mce-nav-item>\n *   <mce-nav-item icon=\"music_note\">Music</mce-nav-item>\n * </mce-bottom-nav-bar>\n * ```   \n * \n * <iframe height='265' scrolling='no' title='mce a-bottom-bar' src='//codepen.io/allenhwkim/embed/aEVowx/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/aEVowx/'>mce a-bottom-bar</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-bottom-nav-bar` style classes\n *  |name|description|\n *  |---|---|\n *  |mce-dark-bg| dark background bottom bar\n */\nclass BottomNavBar extends HTMLElement {\n  connectedCallback() {\n    if (window.ce && window.ce.resizeHandler) {} else {\n      window.ce = { resizeHandler: _utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"windowResizeHandler\"] };\n      window.addEventListener('resize', window.ce.resizeHandler);\n      window.addEventListener('load', window.ce.resizeHandler);\n    }\n  }\n}\n\ncustomElements.define('mce-bottom-nav-bar', BottomNavBar);\n\n//# sourceURL=webpack:///./src/bottom-nav-bar/bottom-nav-bar.js?");

/***/ }),

/***/ "./src/button/button.js":
/*!******************************!*\
  !*** ./src/button/button.js ***!
  \******************************/
/*! exports provided: Button */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Button\", function() { return Button; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * Buttons communicate the action that will occur when the user touches them.\n * \n * [Material Design Spec](https://material.io/guidelines/components/buttons.html#buttons-style)\n * \n * ### example\n * ```\n * <div>\n *   <mce-button>\n *     <mce-icon>search</mce-icon> Normal </mce-button>\n *   <mce-button class=\"mce-dark\">\n *     <mce-icon>search</mce-icon> Normal </mce-button>\n *   <mce-button disabled=\"\">\n *     <mce-icon>search</mce-icon> disabled </mce-button>\n *   <mce-button disabled=\"\" class=\"mce-dark\">\n *     <mce-icon>search</mce-icon> disabled </mce-button>\n * </div>\n * ```\n *\n * <iframe height='265' scrolling='no' title='mce button' src='//codepen.io/allenhwkim/embed/aEVoYg/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/aEVoYg/'>mce button</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n * \n * ### `mce-button` attributes \n *  |name|value|description|\n *  |---|---|---|\n *  |nam| | name of button\n *  |value| | button value\n *  |disabled| | if defined, a button is disabled\n * \n * ### `mce-button` style classes\n *  |name|value|description|\n *  |---|---|---|\n *  |mce-dark| | A button with dark background color and light text\n *  |mce-raised| | if defined, light background with dark icons and text \n *  |mce-fab| | if defined, A floating action buttoin; a circular button with shadow effect\n *  |mce-mini| | if defined, A 40 pixel x 40 pixel\n */\nclass Button extends HTMLElement {\n\n  connectedCallback() {\n    this.buttonAttrs = ['name', 'value', 'disabled'];\n    setTimeout(this._addRealButton.bind(this));\n  }\n\n  set disabled(bool) {\n    bool ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\n  }\n\n  _addRealButton() {\n    let buttonEl = document.createElement('button');\n    buttonEl.setAttribute('tabindex', '-1');\n    Array.from(this.attributes).forEach(attr => {\n      this.buttonAttrs.includes(attr.name) && buttonEl.setAttribute(attr.name, attr.value);\n    });\n\n    Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, (attr, val) => {\n      this.buttonAttrs.includes(attr) && buttonEl.setAttribute(attr, val);\n    });\n\n    if (!this.classList.contains('mce-disabled')) {\n      Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"setTabbable\"])(this, _ => buttonEl.click()); // set tabindex and click/ENTER function\n    }\n    this.appendChild(buttonEl);\n  }\n\n}\n\ncustomElements.define('mce-button', Button);\n\n//# sourceURL=webpack:///./src/button/button.js?");

/***/ }),

/***/ "./src/card/card.js":
/*!**************************!*\
  !*** ./src/card/card.js ***!
  \**************************/
/*! exports provided: Card */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Card\", function() { return Card; });\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information. \n *\n * [Material Design Spec](https://material.io/guidelines/components/cards.html#cards-content-blocks)\n * \n * ### example\n * ```\n * <mce-card>\n *   <div class=\"mce-title\">\n *     <h1>Title Goes Here</h1>\n *     <div class=\"mce-subtitle\">Subtitle here</div>\n *   </div>\n *   <div class=\"mce-text\">\n *     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n *     in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n *   </div>\n *   <div class=\"mce-actions\">\n *     <a href=\"javascript:void(0)\">ACTION 1</a>\n *     <a href=\"javascript:void(0)\">ACTION 2</a>\n *   </div>\n * </mce-card>\n * ```\n * \n * <iframe height='265' scrolling='no' title='mce card' src='//codepen.io/allenhwkim/embed/ZvaEez/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/ZvaEez/'>mce card</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n *\n * ### `mce-card` elememe style classes\n *  |name|description|\n *  |---|---|\n *  |mce-picked-up| A raised card. Click a card on this document to see the effect. \n * \n * \n * ### Child element of `mce-card` style classes\n *  |name|description|\n *  |---|---|\n *  |mce-title| Showing a raised card. click a card on this document to see the effect.\n *  |mce-subtitle| Card subtitle with the font size of 14px\n *  |mce-subtitle| Card subtitle with the font size of 14px\n *  |mce-media| An image or video with 16x9 aspect ratio\n *  |mce-actions| Action buttons section with icon, button or a link \n *  |mce-text| Action buttons section with icon, button or a link\n */\nclass Card extends HTMLElement {\n  connectedCallback() {}\n}\n\ncustomElements.define('mce-card', Card);\n\n//# sourceURL=webpack:///./src/card/card.js?");

/***/ }),

/***/ "./src/checkbox/checkbox.js":
/*!**********************************!*\
  !*** ./src/checkbox/checkbox.js ***!
  \**********************************/
/*! exports provided: Checkbox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Checkbox\", function() { return Checkbox; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\nvar iconSVG = `\n  <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path class=\"checked\"   d=\"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n    <path class=\"unchecked\" d=\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"/>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n  </svg>`;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * [Material Design Spec](https://material.io/guidelines/components/selection-controls.html#)\n * \n * ### example\n * ```\n * <div>\n *   <mce-checkbox id=\"checkbox1\"></mce-checkbox>\n *   <label for=\"checkbox1\">Unchecked</label>\n *   <mce-checkbox id=\"checkbox2\" checked=\"\"></mce-checkbox>\n *   <label for=\"checkbox2\">Checked</label>\n *   <mce-checkbox id=\"checkbox3\" disabled=\"\"></mce-checkbox>\n *   <label for=\"checkbox3\">Disabled</label>\n *   <mce-checkbox id=\"checkbox4\" checked=\"\" disabled=\"\"></mce-checkbox>\n *   <label for=\"checkbox4\">Disabled</label>\n * </div> \n * ```\n *\n * <iframe height='265' scrolling='no' title='mce a-checkbox' src='//codepen.io/allenhwkim/embed/BJmaeb/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/BJmaeb/'>mce a-checkbox</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-checkbox` atttibutes\n *  It accepts all `input` checkbox attributes. E.g., id, name, value, disaled, or checked\n * \n */\nclass Checkbox extends HTMLElement {\n  connectedCallback() {\n    this.inputAttrs = ['id', 'name', 'value', 'disabled', 'checked'];\n    this.inputEl = this._addRealInput();\n    Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, (attr, val) => {\n      val === null ? this.inputEl.removeAttribute(attr) : this.inputEl.setAttribute(attr, val);\n    });\n    if (this.getAttribute('disabled') !== null) {\n      Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"setTabbable\"])(this, _ => this.inputEl.click());\n    }\n  }\n\n  _addRealInput() {\n    let inputEl = document.createElement('input');\n    inputEl.setAttribute(\"type\", \"checkbox\");\n    inputEl.setAttribute(\"tabindex\", \"-1\");\n    Array.from(this.attributes).forEach(attr => {\n      if (this.inputAttrs.includes(attr.name) && attr.value !== null) {\n        inputEl.setAttribute(attr.name, attr.value);\n        attr.name === 'id' && this.setAttribute('id', 'mce-checkbox-' + attr.value);\n      }\n    });\n    this.appendChild(inputEl);\n    this.insertAdjacentHTML('beforeend', iconSVG);\n    return inputEl;\n  }\n\n}\ncustomElements.define('mce-checkbox', Checkbox);\n\n//# sourceURL=webpack:///./src/checkbox/checkbox.js?");

/***/ }),

/***/ "./src/chip/chip.js":
/*!**************************!*\
  !*** ./src/chip/chip.js ***!
  \**************************/
/*! exports provided: Chip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Chip\", function() { return Chip; });\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n *\n * [Material Design Spec](https://material.io/guidelines/components/chips.html#chips-specs)\n *\n * ### Examples\n * ```\n * <div>\n *   <mce-chip text=\"AMZ Bank\"></mce-chip>\n *   <mce-chip avatar=\"ali.connors.jpg\" text=\"AMZ Bank\"></mce-chip>\n *   <mce-chip text=\"AMZ Bank\" removable=\"\"></mce-chip>\n *   <mce-chip avatar=\"A\" text=\"AMZ Bank\" removable=\"\" on-remove=\"alert('chip removal')\"></mce-chip>\n * </div>\n * ```\n *\n * <iframe height='265' scrolling='no' title='jYYWPg' src='//codepen.io/allenhwkim/embed/jYYWPg/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/jYYWPg/'>jYYWPg</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n *\n * ### `mce-chip` atttibutes\n *  |name|value|description|\n *  |---|---|---|\n *  |avatar| image url| An avatar text or image url for contact information that users have for people may be represented in a compact way using contact chips. The chips\n *  |text| string | Main text of the chip\n *  |removable| | if defined, it addes delete icon to the chip.\n *  |on-remove| Javascrip function| A javascript code to be executed when chip is removed.\n */\nclass Chip extends HTMLElement {\n\n  connectedCallback() {\n    this._buildHTML();\n  }\n\n  _buildHTML() {\n    let avatar = this.getAttribute('avatar');\n    let text = this.getAttribute('text');\n    let removable = this.getAttribute('removable');\n    let onRemove = this.getAttribute('on-remove');\n\n    if (avatar) {\n      if (avatar.match(/\\.(png|jpg|gif|svg)$/)) {\n        this.insertAdjacentHTML('beforeend', `<div class=\"mce-avatar\" style=\"background-image:url(${avatar})\"></div>`);\n      } else {\n        this.insertAdjacentHTML('beforeend', `<div class=\"mce-avatar\">${avatar}</div>`);\n      }\n    }\n\n    if (text) {\n      this.insertAdjacentHTML('beforeend', `<div class=\"mce-text\">${text}</div>`);\n    }\n\n    if (removable !== null) {\n      let removeEl = document.createElement('mce-icon');\n      removeEl.setAttribute('tabindex', '0');\n      removeEl.classList.add('mce-delete');\n      removeEl.innerHTML = 'clear';\n\n      removeEl.addEventListener('click', event => {\n        let customEvent = new CustomEvent('remove', event);\n        this.dispatchEvent(customEvent);\n      });\n\n      this.appendChild(removeEl);\n\n      this.addEventListener('remove', function (event) {\n        let func = new Function(onRemove);\n        func();\n        this.remove();\n      });\n    }\n  }\n\n}\n\ncustomElements.define('mce-chip', Chip);\n\n//# sourceURL=webpack:///./src/chip/chip.js?");

/***/ }),

/***/ "./src/dialog/dialog.js":
/*!******************************!*\
  !*** ./src/dialog/dialog.js ***!
  \******************************/
/*! exports provided: Dialog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Dialog\", function() { return Dialog; });\n/**\n * Dialogs contain text and UI controls. They retain focus until dismissed or a required action has been taken. Use dialogs sparingly because they are interruptive.\n *\n * [Material Design Spec.](https://material.io/guidelines/components/dialogs.html#dialogs-specs)\n * \n * ### example\n * ```\n * <div>\n *   <mce-button class=\"mce-raised\" onclick=\"openDialog('dialog-1')\">Open A Dialog</mce-button>\n *   <mce-dialog id=\"dialog-1\">\n *     <h3 class=\"mce-title\">Title</h3>\n *     <div class=\"mce-content\">\n *       Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n *       in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n *     </div>\n *     <hr class=\"mce-divider\">\n *     <div class=\"mce-actions\">\n *       <mce-button onclick=\"closeDialog('dialog-1')\">cancel</mce-button>\n *       <mce-button onclick=\"closeDialog('dialog-1')\">OK</mce-button>\n *     </div>\n *   </mce-dialog>\n * </div>\n * ```\n *\n * <iframe height='265' scrolling='no' title='rppxOe' src='//codepen.io/allenhwkim/embed/rppxOe/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/rppxOe/'>rppxOe</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n *\n * ### `mce-dialog` elememe style classes\n *  |name|description|\n *  |---|---|\n *  |mce-visible|Indicates that the dialog is an open status\n * \n * \n * ### Child element of `mce-dialog` style classes\n *  |name|description|\n *  |---|---|\n *  |mce-divider| Draw a line\n *  |mce-title| Title section of the dialog\n *  |mce-content| Content section of the dialog\n *  |mce-actions| The container of action buttons\n * \n */\nclass Dialog extends HTMLElement {\n  connectedCallback() {\n    this.displayLevel = this.getAttribute('display-level') || 'root';\n    this._regroupedOnce = this._regroupedOnce || false;\n    setTimeout(_ => {\n      !this._regroupedOnce && this._regroupElements();\n      this._regroupedOnce = true;\n      if (this.displayLevel === 'root' && !this.parentElement.isSameNode(document.body)) {\n        //document-level dialog\n        document.body.appendChild(this);\n        this.querySelector('.mce-page-blocker').style.position = 'fixed';\n        this.querySelector('.mce-container').style.position = 'fixed';\n      }\n    });\n  }\n\n  /**\n   * Opens te dialog with the given data\n   *\n   * @param {Object} data, options for this dialog\n   *   title: Title of this dialog  \n   *   content:  Contents of this dialog as in string format.  \n   *   actions: Buttons for this dialog with callback function\n   * @example \n   *   document.getElementById('my-dialog').open({\n   *     title: 'Custim Title', \n   *     contents:'This is custom contents',\n   *     actions: {'Custom Button': () => alert('My Button is clicked.')}\n   *   });\n   * @returns void\n   */\n  open(data) {\n    //replace title, content, actions with data given\n    data && this._updateContent(data);\n    this.displayLevel === 'root' && (document.body.style.overflow = 'hidden');\n    this.classList.add('mce-visible');\n  }\n\n  /**\n   * Closes the dialog\n   */\n  close() {\n    this.displayLevel === 'root' && (document.body.style.overflow = '');\n    this.classList.remove('mce-visible');\n  }\n\n  _regroupElements() {\n    let pageBlockerEl, containerEl;\n    pageBlockerEl = document.createElement('div');\n    pageBlockerEl.classList.add('mce-page-blocker');\n    pageBlockerEl.addEventListener('click', () => {\n      this.close();\n    });\n    this.appendChild(pageBlockerEl);\n\n    containerEl = document.createElement('div');\n    containerEl.classList.add('mce-container');\n    this.appendChild(containerEl);\n\n    Array.from(this.children).forEach(el => {\n      if (!el.isSameNode(containerEl) && !el.isSameNode(pageBlockerEl)) {\n        containerEl.appendChild(el);\n      }\n    });\n  }\n\n  _updateContent(data) {\n    let titleEl, contentEl, actionsEl;\n    let appendEl = className => {\n      let el = document.createElement('div');\n      el.classList.add(className);\n      this.appendChild(el);\n      return el;\n    };\n    if (data.title !== undefined) {\n      titleEl = this.querySelector('.mce-title') || appendEl('mce-title');\n      titleEl.innerHTML = data.title;\n    }\n    if (data.contents !== undefined) {\n      contentEl = this.querySelector('.mce-content') || appendEl('mce-content');\n      contentEl.innerHTML = data.contents;\n    }\n    if (data.actions !== undefined) {\n      actionsEl = this.querySelector('.mce-actions') || appendEl('mce-actions');\n      actionsEl.innerHTML = '';\n      for (var key in data.actions) {\n        let buttonEl = document.createElement('mce-button');\n        buttonEl.innerHTML = key;\n        buttonEl.addEventListener('click', _ => {\n          data.actions[key]();\n          this.close();\n        });\n        actionsEl.appendChild(buttonEl);\n      }\n    }\n  }\n}\n\ncustomElements.define('mce-dialog', Dialog);\n\n//# sourceURL=webpack:///./src/dialog/dialog.js?");

/***/ }),

/***/ "./src/expansion-panel/expansion-panel.js":
/*!************************************************!*\
  !*** ./src/expansion-panel/expansion-panel.js ***!
  \************************************************/
/*! exports provided: ExpansionPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExpansionPanel\", function() { return ExpansionPanel; });\n/**\n * Expansion panels contain creation flows and allow lightweight editing of an element.\n *\n * [Material Design Spec.](https://material.io/guidelines/components/expansion-panels.html#expansion-panels-specs)\n *\n * ### example\n * ```\n *  <mce-expansion-panel>\n *    <div class=\"mce-title\">\n *      <h1>Trip name</h1>\n *      <div>Carribean Cruise</div>\n *    </div>\n *    <div class=\"mce-text\">\n *      Text: 14sp Left and right padding: 16dp Top padding: 16dp or 24dp (when a primary title is present) Bottom padding: 16dp (if there are additional actions or supporting text) or 24dp (if there are no actions or supporting text)\n *    </div>\n *  </mce-expansion-panel>\n * ```\n *\n * <iframe height='265' scrolling='no' title='RxxrRJ' src='//codepen.io/allenhwkim/embed/RxxrRJ/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/RxxrRJ/'>RxxrRJ</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n *\n * ### `mce-expansion-panel` elememe style classes\n *  |name|description|\n *  |---|---|\n *  |mce-expanded|  Indicates that the expansion-panel is expanded. Without this, it's collapsed.\n * \n * \n * ### Child element of `mce-expansion-panel` style classes\n *  |name|description|\n *  |---|---|\n *  |mce-title|  container class of title section. This is visible when it is collapsed.\n *  |mce-text|  container class of text section. This is collapsed when not expanded.\n *  |mce-actions|  container class of actions section. This is collapsed when not expanded.\n * \n */\nclass ExpansionPanel extends HTMLElement {\n  connectedCallback() {\n    setTimeout(_ => {\n      //this.querySelector takes time\n      let titleEl = this.querySelector('.mce-title');\n      titleEl && titleEl.addEventListener('click', this._showThisPanelOnly.bind(this));\n    });\n  }\n\n  _showThisPanelOnly(event) {\n    Array.from(document.querySelectorAll('mce-expansion-panel')).forEach(panelEl => {\n      if (panelEl.isSameNode(this)) {\n        panelEl.classList.toggle('mce-expanded');\n      } else {\n        panelEl.classList.remove('mce-expanded');\n      }\n    });\n  }\n}\n\ncustomElements.define('mce-expansion-panel', ExpansionPanel);\n\n//# sourceURL=webpack:///./src/expansion-panel/expansion-panel.js?");

/***/ }),

/***/ "./src/grid-list/grid-list.js":
/*!************************************!*\
  !*** ./src/grid-list/grid-list.js ***!
  \************************************/
/*! exports provided: GridList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GridList\", function() { return GridList; });\n/**\n * Grid lists are an alternative to standard list views.\n *\n * [Material Design Spec.](https://material.io/guidelines/components/grid-lists.html#grid-lists-specs)\n *\n * ### Example\n * ```\n * <mce-grid-list>\n *   <div>\n *     <img src=\"nature2.jpg\">\n *     <div class=\"mce-text-with-icon\">\n *       <h1>Single Line</h1>\n *     </div>\n *   </div>\n *   <div>\n *     <img src=\"nature2.jpg\">\n *     <div class=\"mce-text-with-icon\">\n *       <h1>Single Line</h1>\n *     </div>\n *   </div>\n * </mce-grid-list>\n * ```\n *\n * <iframe height='265' scrolling='no' title='baaEeJ' src='//codepen.io/allenhwkim/embed/baaEeJ/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/baaEeJ/'>baaEeJ</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### Child element of `mce-grid-list` style classes\n *  |name|description|\n *  |---|---|\n *  |mce-text-with-icon| A shady bottom section with text and an icon\n *  |mce-text| Text within text-with-icon section \n * \n */\nclass GridList extends HTMLElement {\n  connectedCallback() {}\n}\n\ncustomElements.define('mce-grid-list', GridList);\n\n//# sourceURL=webpack:///./src/grid-list/grid-list.js?");

/***/ }),

/***/ "./src/icon/icon.js":
/*!**************************!*\
  !*** ./src/icon/icon.js ***!
  \**************************/
/*! exports provided: Icon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Icon\", function() { return Icon; });\n/**\n * Material icons use geometric shapes to visually represent core ideas, capabilities, or topics. System icons represent a command, file, device, directory, or common actions.\n *\n * [Material Design Spec.](https://material.io/guidelines/style/icons.html#)\n *\n * ### example\n * ```\n *   <mce-icon class=\"mce-small\">face</mce-icon>\n *   <mce-icon>face</mce-icon>\n *   <mce-icon class=\"mce-big\">face</mce-icon>\n *   <mce-icon class=\"mce-double\">face</mce-icon>\n *   <mce-icon class=\"mce-double\">fmce-envelope</mce-icon> <!-- for Font-Awesome icon -->\n *   <mce-icon class=\"mce-double\" img=\"ali.connors.jpg\"></mce-icon>\n * ```\n *\n * <iframe height='265' scrolling='no' title='MrrKbK' src='//codepen.io/allenhwkim/embed/MrrKbK/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/MrrKbK/'>MrrKbK</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n *\n * ### `mce-icon` element atttibutes\n *  |name|value|description|\n *  |---|---|---|\n *  |img| image url | Show an image instead of font icon. e.g. img=\"ali.conors.jpg\"\n * \n * ### `mce-icon` element style classes\n *  |name|description|\n *  |---|---|\n *  |mce-small | A smaller icon. 18px\n *  |mce-big | Bigger icon. 36px\n *  |mce-double | Double-sized icon. 48px\n *  |mce-circle | An icon in a circle\n *  |mce-square | An icon in a square\n *  |mce-dark-bg | An icon in dark background\n *  |mce-reactive | An icon respond to click and showing a ripple effect\n *  |mce-disabled | A greyed out without responsiveness\n */\nclass Icon extends HTMLElement {\n  connectedCallback() {\n    setTimeout(_ => {\n      this._setImageIcon(); // if img attribute given, set image icon\n      this.clickListener = this._onClick.bind(this);\n      this._addEventListener();\n    });\n  }\n\n  disconnectedCallback() {\n    this.removeEventListener('mouseup', this.clickListener);\n    this.removeEventListener('touchend', this.clickListener);\n  }\n\n  _onClick(event) {\n    let href = this.getAttribute('href');\n    if (href) {\n      window.location.href = href; //with href, go to the given url, \n    }\n  }\n\n  _addEventListener() {\n    this.addEventListener('mouseup', this.clickListener);\n    this.addEventListener('touchend', this.clickListener);\n  }\n\n  _setImageIcon() {\n    let iconText = this.innerHTML;\n    let isFAIcon = iconText.match(/^fa-[a-z\\-]+$/);\n    let isMDIcon = iconText.match(/^[a-z_]+$/);\n    let imgSrc = this.getAttribute('img');\n\n    if (isMDIcon) {\n      this.innerHTML = `<i class=\"material-icons\">${iconText}</i>`;\n    } else if (isFAIcon) {\n      this.innerHTML = `<i class=\"fa ${iconText}\"></i>`;\n    } else if (imgSrc) {\n      this.innerHTML = '<i>photo</i>';\n      this.style.backgroundImage = `url(${imgSrc})`;\n    }\n  }\n}\n\ncustomElements.define('mce-icon', Icon);\n\n//# sourceURL=webpack:///./src/icon/icon.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mce-polyfill.js */ \"./src/mce-polyfill.js\");\n/* harmony import */ var _mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app_bar_app_bar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app-bar/app-bar.js */ \"./src/app-bar/app-bar.js\");\n/* harmony import */ var _bottom_nav_bar_bottom_nav_bar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bottom-nav-bar/bottom-nav-bar.js */ \"./src/bottom-nav-bar/bottom-nav-bar.js\");\n/* harmony import */ var _button_button_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./button/button.js */ \"./src/button/button.js\");\n/* harmony import */ var _card_card_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./card/card.js */ \"./src/card/card.js\");\n/* harmony import */ var _checkbox_checkbox_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./checkbox/checkbox.js */ \"./src/checkbox/checkbox.js\");\n/* harmony import */ var _chip_chip_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./chip/chip.js */ \"./src/chip/chip.js\");\n/* harmony import */ var _dialog_dialog_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dialog/dialog.js */ \"./src/dialog/dialog.js\");\n/* harmony import */ var _expansion_panel_expansion_panel_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./expansion-panel/expansion-panel.js */ \"./src/expansion-panel/expansion-panel.js\");\n/* harmony import */ var _grid_list_grid_list_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./grid-list/grid-list.js */ \"./src/grid-list/grid-list.js\");\n/* harmony import */ var _icon_icon_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./icon/icon.js */ \"./src/icon/icon.js\");\n/* harmony import */ var _list_list_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./list/list.js */ \"./src/list/list.js\");\n/* harmony import */ var _menu_menu_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./menu/menu.js */ \"./src/menu/menu.js\");\n/* harmony import */ var _nav_drawer_nav_drawer_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./nav-drawer/nav-drawer.js */ \"./src/nav-drawer/nav-drawer.js\");\n/* harmony import */ var _nav_item_nav_item_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./nav-item/nav-item.js */ \"./src/nav-item/nav-item.js\");\n/* harmony import */ var _radio_button_radio_button_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./radio-button/radio-button.js */ \"./src/radio-button/radio-button.js\");\n/* harmony import */ var _refresh_indicator_refresh_indicator_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./refresh-indicator/refresh-indicator.js */ \"./src/refresh-indicator/refresh-indicator.js\");\n/* harmony import */ var _search_search_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./search/search.js */ \"./src/search/search.js\");\n/* harmony import */ var _snackbar_snackbar_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./snackbar/snackbar.js */ \"./src/snackbar/snackbar.js\");\n/* harmony import */ var _switch_switch_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./switch/switch.js */ \"./src/switch/switch.js\");\n/* harmony import */ var _tabs_tabs_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./tabs/tabs.js */ \"./src/tabs/tabs.js\");\n/* harmony import */ var _text_field_text_field_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./text-field/text-field.js */ \"./src/text-field/text-field.js\");\n/* harmony import */ var _tooltip_tooltip_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./tooltip/tooltip.js */ \"./src/tooltip/tooltip.js\");\n/* harmony import */ var _leaflet_leaflet_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./leaflet/leaflet.js */ \"./src/leaflet/leaflet.js\");\n/* harmony import */ var _leaflet_marker_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./leaflet/marker.js */ \"./src/leaflet/marker.js\");\n/* harmony import */ var _router_router_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./router/router.js */ \"./src/router/router.js\");\n/* harmony import */ var _router_route_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./router/route.js */ \"./src/router/route.js\");\n/* harmony import */ var _blocker_blocker_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./blocker/blocker.js */ \"./src/blocker/blocker.js\");\n/* harmony import */ var _inview_inview_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./inview/inview.js */ \"./src/inview/inview.js\");\n/* harmony import */ var _list_item_list_item_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./list-item/list-item.js */ \"./src/list-item/list-item.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// include css if not already there with \"*mce.mincss\" or id=\"mce-css\"\n(function () {\n  let cssIncluded = window.debug || document.querySelector('link[href$=\"mce.min.css\"]') || document.querySelector('link[id=\"mce-css\"]');\n\n  if (!cssIncluded) {\n    let mdIconEl = document.createElement('link');\n    mdIconEl.setAttribute('rel', 'stylesheet');\n    mdIconEl.setAttribute('auto-added-by-mce', '');\n    mdIconEl.setAttribute('href', 'https://fonts.googleapis.com/icon?family=Material+Icons');\n    document.head.appendChild(mdIconEl);\n\n    let mceCssEl = document.createElement('link');\n    mceCssEl.setAttribute('rel', 'stylesheet');\n    mceCssEl.setAttribute('auto-added-by-mce', '');\n    mceCssEl.setAttribute('href', 'https://unpkg.com/mce/dist/mce.min.css');\n    document.head.appendChild(mceCssEl);\n\n    let mceThemeEl = document.createElement('link');\n    mceThemeEl.setAttribute('rel', 'stylesheet');\n    mceThemeEl.setAttribute('auto-added-by-mce', '');\n    mceThemeEl.setAttribute('href', 'https://unpkg.com/mce/dist/themes/blue.css');\n    document.head.appendChild(mceThemeEl);\n  }\n})();\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/inview/inview.js":
/*!******************************!*\
  !*** ./src/inview/inview.js ***!
  \******************************/
/*! exports provided: Inview */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Inview\", function() { return Inview; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * Render element only if the element comes into the viewport\n * Then, fires `inview` and `outview` events when in/out of viewport\n *\n * ### example\n * ```\n *  <mce-inview on-inview=\"inview(event)\" on-outview=\"outview(event)\" \n     root=\"body\" root-margin=\"10px 20px 30px 40px\" threshold=\"[.1,.2,.3,.4,.5]\">\n *    <template>\n *      <div class=\"comment\">This image is only rendered when this is in viewport.</div>\n *      <img src=\"https://picsum.photos/200/300/?random\" />\n *    </template>\n *  </mce-inview>\n * ```\n *\n * ### Attributes\n *\n *  |name       |value     |description                        |\n *  |-----------|----------|-----------------------------------|\n *  |root       |selector  | The element that is used as the viewport for checking visiblity of the target. \n *  |margin     |string    | Margin around the root. e.g. 10px 20px 30px 40px\n *  |threshold  |array     | percentage of the target's visibility the observer's callback should be executed. \n *  |on-inview  |expression| The given expression will be run when this element is in viewport e.g. on-inview=\"inview(event)\"\n *  |on-outview |expression| The given expression will be run when outview event is fired e.g. on-inview=\"inview(event)\"\n *\n * ### `mce-menu` Child Element Attributes \n *  |name|value|description|\n *  |---|---|---|\n *  |template| HTMLTemplateElement| contains HTML entities when it comes into the viewport\n *  \n */\nclass Inview extends HTMLElement {\n  connectedCallback() {\n    this.options = { threshold: [.1, .2, .3, .4, .5, .6, .7, .8] }; // default IntersetionObserver options\n    this.events = {};\n    this.once80PctVisible = false;\n    this.templateActivated = false;\n    this.initialize();\n  }\n\n  initialize() {\n    let parsedAttrs = Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"parseAttributes\"])(this.attributes);\n    this.options = Object.assign({}, this.options, parsedAttrs.options);\n    this.events = parsedAttrs.events;\n\n    //set Intersection Observer\n    this.observer = new IntersectionObserver(this.__handleIntersect.bind(this), this.options);\n    this.observer.observe(this);\n\n    this.events.inview = this.events.inview || this.__defaultInviewHandler;\n    for (let eventName in this.events) {\n      this.addEventListener(eventName, this.events[eventName]);\n    }\n  }\n\n  /** fires (inview) and (notInview) events when this component is visible or not visible  */\n  __handleIntersect(entries, observer) {\n    entries.forEach(entry => {\n      let detail = { entry };\n      if (entry.isIntersecting) {\n        this.__activateTemplate();\n        this.dispatchEvent(new CustomEvent('inview', { detail }));\n      } else {\n        this.dispatchEvent(new CustomEvent('outview', { detail }));\n      }\n    });\n  }\n\n  __activateTemplate() {\n    if (this.templateActivated) return;\n\n    const t = this.querySelector('template');\n    const clone = document.importNode(t.content, true);\n    this.appendChild(clone);\n\n    this.templateActivated = true;\n  }\n\n  /**\n   * default intersection handler, which sets blur dependes on intersection ratio\n   */\n  __defaultInviewHandler(event) {\n    if (this.once80PctVisible) return false;\n    const entry = event.detail.entry;\n\n    if (entry.intersectionRatio < 0.8) {\n      const opacity = entry.intersectionRatio * (1 / 0.8);\n      const blur = 20 - Math.floor(entry.intersectionRatio * 10) * 4;\n      const filter = `blur(${blur}px)`;\n      // Object.assign(entry.target.style, {opacity, filter});\n      Object.assign(entry.target.style, { opacity });\n    } else {\n      entry.target.style.opacity = 1;\n      entry.target.style.filter = 'unset';\n\n      this.once80PctVisible = true;\n    }\n  }\n\n}\n\ncustomElements.define('mce-inview', Inview);\n\n//# sourceURL=webpack:///./src/inview/inview.js?");

/***/ }),

/***/ "./src/leaflet/leaflet-util.js":
/*!*************************************!*\
  !*** ./src/leaflet/leaflet-util.js ***!
  \*************************************/
/*! exports provided: geocode, resolveLatLng */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"geocode\", function() { return geocode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolveLatLng\", function() { return resolveLatLng; });\nfunction isLatLng(latlng) {\n  return Array.isArray(latlng) && latlng.length === 2 && isFinite(latlng[0]) && isFinite(latlng[1]) || latlng.lat && latlng.lng;\n}\n\nfunction geocode(address) {\n  let url = 'https://nominatim.openstreetmap.org/?format=json' + '&addressdetails=1&q=' + address + '&format=json&limit=1';\n  return fetch(url).then(function (response) {\n    return response.json();\n  });\n}\n\nfunction resolveLatLng(latlng) {\n  return new Promise(function (resolve, reject) {\n    if (typeof latlng === 'string') {\n      // we need to resolve it to lat/lng\n      geocode(latlng).then(function (json) {\n        if (json[0]) {\n          resolve([json[0].lat, json[0].lon]);\n        } else {\n          reject(`Invalid address, \"${latlng}\"`);\n        }\n      });\n    } else if (isLatLng(latlng)) {\n      resolve(latlng);\n    } else {\n      console.error('Invalid latlng', latlng);\n      throw \"Invalid latlng\";\n    }\n  });\n}\n\n//# sourceURL=webpack:///./src/leaflet/leaflet-util.js?");

/***/ }),

/***/ "./src/leaflet/leaflet.js":
/*!********************************!*\
  !*** ./src/leaflet/leaflet.js ***!
  \********************************/
/*! exports provided: LeafletMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LeafletMap\", function() { return LeafletMap; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n/* harmony import */ var _leaflet_util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./leaflet-util.js */ \"./src/leaflet/leaflet-util.js\");\n\n\n\n/**\n * @description\n * leaflet map element, `mce-leaflet`\n * \n * ### example\n * ```\n * <mce-leaflet center=\"Brampton, Canada\"></mce-leaflet>\n * ```\n *\n * <iframe height='265' scrolling='no' title='OzzMbd' src='//codepen.io/allenhwkim/embed/OzzMbd/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/OzzMbd/'>OzzMbd</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * \n * ### `mce-leaflet` Attributes \n * any options defined in leaflet, http://leafletjs.com/reference-1.2.0.html#map-option\n * As an example, for center and zoom \n *\n *  |name|value|description|\n *  |---|---|---|\n *  |center|Array or String| Initial geographic center of the map. [lat, lng], or an address. e.g. [0,0], \"Brampton, Canada\"\n *  |zoom|number| initial map zoom level e.g. 13\n *  |...|...| [more](http://leafletjs.com/reference-1.2.0.html#map-option)\n * \n * any events defined in leaflet with `on-` prefixed; http://leafletjs.com/reference-1.2.0.html#map-event\n * As an example, for click event, \n *\n *  |name|value|description|\n *  |---|---|---|\n *  |on-click|function reference| e.g. on-click=\"myClickHandler\"\n *  |...|...| [more](http://leafletjs.com/reference-1.2.0.html#map-event)\n */\nclass LeafletMap extends HTMLElement {\n  connectedCallback() {\n    this.map;\n    this.options = { center: [51.505, -0.09], zoom: 13 }; // default options\n    this.events = {};\n\n    // initiazlie separately when `lazy-init` is given\n    this.getAttribute('lazy-init') === null && this.initialize();\n  }\n\n  initialize() {\n    if (this.map) {\n      // already initialized\n      return false;\n    }\n    this.loadLibrary().then(L => {\n      // set options and events\n      let parsedAttrs = Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"parseAttributes\"])(this.attributes);\n      this.options = Object.assign(this.options, parsedAttrs.options);\n      this.events = parsedAttrs.events;\n    }).then(_ => Object(_leaflet_util_js__WEBPACK_IMPORTED_MODULE_1__[\"resolveLatLng\"])(this.options.center)).then(latlng => {\n      this.options.center = latlng;\n\n      let mapOptions = Object.assign({}, this.options);\n      delete mapOptions.zoom;\n      delete mapOptions.center;\n      this.map = new L.map(this, mapOptions);\n      this.setEvents(); // load event must fire when set view\n      this.map.setView(latlng, this.options.zoom);\n    }).then(_ => {\n      Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, this.onAttrChange.bind(this));\n      setTimeout(_ => {\n        // children are not immediatly visible\n        let childEls = Array.from(this.querySelectorAll('*')).filter(el => el.tagName.match(/-/));\n        childEls.forEach(child => child.initialize(this.map));\n        if (!this.querySelector('mce-tile-layer')) {\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(this.map);\n        }\n      });\n    });\n  }\n\n  setEvents() {\n    for (let eventName in this.events) {\n      window.debug && console.log('this.events[eventName]', eventName, this.events[eventName]);\n      this.map.on(eventName, this.events[eventName]);\n    }\n  }\n\n  // run setXXX if defined when attribute value changes\n  onAttrChange(name, val) {\n    if (name === 'center') {\n      if (typeof val === 'string') {\n        Object(_leaflet_util_js__WEBPACK_IMPORTED_MODULE_1__[\"resolveLatLng\"])(val).then(latlng => {\n          this.map.setView(latlng, this.map.getZoom());\n        });\n      } else {\n        this.map.setView(val, this.map.getZoom());\n      }\n    } else if (!['class', 'tabindex', 'style'].includes(name)) {\n      Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"callSetMethod\"])(this.map, name, val);\n    };\n  }\n\n  loadLibrary() {\n    if (!document.querySelector('link.mce-map.leaflet')) {\n      let el = document.createElement('link');\n      el.setAttribute('class', 'mce-map leaflet');\n      el.setAttribute('rel', 'stylesheet');\n      el.setAttribute('href', 'https://unpkg.com/leaflet@1.2.0/dist/leaflet.css');\n      document.querySelector('head').appendChild(el);\n    }\n\n    if (!document.querySelector('script.mce-map.leaflet')) {\n      let el = document.createElement('script');\n      el.setAttribute('class', 'mce-map leaflet');\n      el.setAttribute('src', 'https://unpkg.com/leaflet@1.2.0/dist/leaflet.js');\n      document.querySelector('head').appendChild(el);\n    }\n\n    return Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"waitUntil\"])(_ => window.L); // this returns a promisse\n  }\n\n}\n\ncustomElements.define('mce-leaflet', LeafletMap);\n\n//# sourceURL=webpack:///./src/leaflet/leaflet.js?");

/***/ }),

/***/ "./src/leaflet/marker.js":
/*!*******************************!*\
  !*** ./src/leaflet/marker.js ***!
  \*******************************/
/*! exports provided: LeafletMarker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LeafletMarker\", function() { return LeafletMarker; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n/* harmony import */ var _leaflet_util_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./leaflet-util.js */ \"./src/leaflet/leaflet-util.js\");\n\n\n\n/**\n * @description\n * leaflet marker element, `mce-marker`\n * \n * ### example\n * ```\n * <mce-leaflet center=\"[50.5, 30.5]\">\n *   <mce-marker lat-lng=\"[50.5, 30.5]\"></marker>\n * </mce-leaflet>\n * ```\n *\n * <iframe height='265' scrolling='no' title='XVVXRp' src='//codepen.io/allenhwkim/embed/XVVXRp/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/XVVXRp/'>XVVXRp</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * Popup Example\n * \n * <p data-height=\"600\" data-theme-id=\"32189\" data-slug-hash=\"mppVmz\" data-default-tab=\"result\" data-user=\"allenhwkim\" data-embed-version=\"2\" data-pen-title=\"mce template\" class=\"codepen\">See the Pen <a href=\"https://codepen.io/allenhwkim/pen/PEJKKo/\">mce template</a> by Allen kim (<a href=\"https://codepen.io/allenhwkim\">@allenhwkim</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<script async src=\"https://production-assets.codepen.io/assets/embed/ei.js\"></script>\n * \n * ### `mce-marker` Attributes \n * any marker options defined in leaflet, http://leafletjs.com/reference-1.2.0.html#marker-option\n * As an example, for draggable \n *\n *  |name|value|description|\n *  |---|---|---|\n *  |draggable|Boolean| Whether the marker is draggable with mouse/touch or not.\n *  |...|...| [more](http://leafletjs.com/reference-1.2.0.html#marker-option)\n * \n * any events defined in marker with `on-` prefixed; http://leafletjs.com/reference-1.2.0.html#marker-event\n * As an example, for move event, \n *\n *  |name|value|description|\n *  |---|---|---|\n *  |on-move|function reference| e.g. on-move=\"myMoveHandler\"\n *  |...|...| [more](http://leafletjs.com/reference-1.2.0.html#marker-event)\n */\nclass LeafletMarker extends HTMLElement {\n  connectedCallback() {\n    this._map;\n    this.mapObj; // marker\n    this.options = { latlng: [51.505, -0.09] }; // default options\n    this.events = {};\n    this.initialize(this.map);\n  }\n\n  disconnectedCallback() {\n    this.map.removeLayer(this.mapObj);\n  }\n\n  get map() {\n    this._map = this._map || this.closest('mce-leaflet').map;\n    return this._map;\n  }\n\n  initialize(map) {\n    if (!map) return;\n    let attrParsed = Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"parseAttributes\"])(this.attributes);\n\n    this.options = Object.assign(this.options, attrParsed.options);\n    this.events = attrParsed.events;\n    Object(_leaflet_util_js__WEBPACK_IMPORTED_MODULE_1__[\"resolveLatLng\"])(this.options.latlng).then(latlng => {\n      this.mapObj = new L.marker(latlng, this.options); // set options\n      this.mapObj.customElement = this;\n      for (let eventName in this.events) {\n        // set events\n        this.mapObj.on(eventName, this.events[eventName]);\n      }\n\n      this.mapObj.addTo(map); // add to map\n      Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, this.onAttrChange.bind(this));\n    });\n  }\n\n  // run setXXX if defined when attribute value changes\n  onAttrChange(name, val) {\n    if (name === 'latlng') {\n      Object(_leaflet_util_js__WEBPACK_IMPORTED_MODULE_1__[\"resolveLatLng\"])(val).then(latlng => this.mapObj.setLatLng(latlng));\n    } else if (!['class', 'tabindex', 'style'].includes(name)) {\n      Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"callSetMethod\"])(this.map, name, val);\n    }\n  }\n\n}\n\ncustomElements.define('mce-marker', LeafletMarker);\n\n//# sourceURL=webpack:///./src/leaflet/marker.js?");

/***/ }),

/***/ "./src/list-item/list-item.js":
/*!************************************!*\
  !*** ./src/list-item/list-item.js ***!
  \************************************/
/*! exports provided: ListItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListItem\", function() { return ListItem; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * List item responds to tab, keydown, keyup(ENTER, ESC), and cick\n *\n * ## Examples\n *\n * ```\n * <mce-list>\n *  <mce-list-item item=\"my.obj[1]\"></mce-list-item>\n * </mce-list>\n * ```\n *\n * <iframe height='265' scrolling='no' title='MrrKoy' src='//codepen.io/allenhwkim/embed/MrrKoy/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/MrrKoy/'>MrrKoy</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-list-item` attributes \n *  |name|value   |description                             |\n *  |----|--------|----------------------------------------|\n *  |item| object | The object that will be assigned to this list-item, so when it is selected, this item will be fired as an event\n * \n */\nclass ListItem extends HTMLElement {\n  connectedCallback() {\n    this.item = null;\n    this.parentListEl = null;\n    this.initialize();\n  }\n\n  initialize() {\n    this.setAttribute('tabindex', '0');\n    this.item = this.textContent;\n    if (this.getAttribute('item')) {\n      // we don't know when the value is assigned\n      setTimeout(_ => {\n        this.item = Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"str2Val\"])(this.getAttribute('item'));\n      });\n    }\n    this.parentListEl = this.closest('mce-list, .mce-list');\n    this.addEventListener('keydown', this.__keydownHandler.bind(this));\n    this.addEventListener('keyup', this.__keyupHandler.bind(this));\n    this.addEventListener('click', this.__clickHandler.bind(this));\n    this.addEventListener('focus', this.__focusHandler.bind(this));\n    this.addEventListener('blur', this.__blurHandler.bind(this));\n  }\n\n  __keydownHandler(event) {\n    const keyCode = event.which || event.keyCode;\n    const listItems = this.parentListEl.querySelectorAll('mce-list-item');\n    const listItemNdx = Array.from(listItems).indexOf(this);\n    const nextListItem = listItems[listItemNdx + 1] || listItems[0];\n    const prevListItem = listItems[listItemNdx - 1] || listItems[listItems.length - 1];\n\n    switch (keyCode) {\n      case 37:case 38:\n        // up arrow, left arrow\n        prevListItem.focus();\n        break;\n      case 39:case 40:\n        // down arrow, right arrow\n        nextListItem.focus();\n        break;\n      default:\n        break;\n    }\n  }\n\n  __keyupHandler(event) {\n    let customEvent;\n    switch (event.key) {\n      case 'Enter':\n      case 'Escape':\n        const eventName = event.key == 'Enter' ? 'selected' : 'escaped';\n        customEvent = new CustomEvent(eventName, { detail: this.item });\n        this.parentListEl.dispatchEvent(customEvent);\n        this.parentListEl.focus();\n        break;\n      default:\n        break;\n    }\n  }\n\n  __clickHandler(event) {\n    let customEvent = new CustomEvent('selected', { detail: this.item });\n    this.parentListEl.dispatchEvent(customEvent);\n  }\n\n  __focusHandler(event) {\n    this.parentListEl.setFocused && this.parentListEl.setFocused('listItem', true);\n  }\n\n  __blurHandler(event) {\n    this.parentListEl.setFocused && this.parentListEl.setFocused('listItem', false);\n  }\n\n}\n\ncustomElements.define('mce-list-item', ListItem);\n\n//# sourceURL=webpack:///./src/list-item/list-item.js?");

/***/ }),

/***/ "./src/list/list.js":
/*!**************************!*\
  !*** ./src/list/list.js ***!
  \**************************/
/*! exports provided: List */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"List\", function() { return List; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * Lists present multiple line items vertically as a single continuous element.\n *\n * [Material Design Spec.](https://material.io/guidelines/components/lists.html#lists-actions)\n * \n * ## Examples\n *\n * ```\n * <mce-list>\n *   <ol>\n *     <li>\n *       <div class=\"mce-icon\">\n *         <mce-icon class=\"mce-circle\">folder</mce-icon>\n *       </div>\n *       <span>Directory</span>\n *       <mce-icon>info</mce-icon>\n *     </li>\n *     <li>\n *       <div class=\"mce-icon\">\n *         <mce-icon class=\"mce-circle\">hotel</mce-icon>\n *       </div>\n *       <span>Hotel</span>\n *       <mce-icon>info</mce-icon>\n *     </li>\n *   </ol>\n * </mce-list>\n * ```\n *\n * <iframe height='265' scrolling='no' title='MrrKoy' src='//codepen.io/allenhwkim/embed/MrrKoy/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/MrrKoy/'>MrrKoy</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * \n`\n */\nclass List extends HTMLElement {\n  connectedCallback() {\n    this._focused = {};\n    this._focusTimer;\n    this.events = {};\n    this.initialize();\n  }\n\n  initialize() {\n    let parsedAttrs = Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"parseAttributes\"])(this.attributes);\n    this.events = parsedAttrs.events;\n\n    for (let eventName in this.events) {\n      this.addEventListener(eventName, this.events[eventName]);\n    }\n  }\n\n  setFocused(elType, focused) {\n    if (focused) {\n      clearTimeout(this._focusTimer);\n      this._focused = { input: false, listItem: false };\n      this._focused[elType] = true;\n    } else {\n      // set blur in a delayed manner;3\n      this._focusTimer = setTimeout(_ => {\n        this._focused[elType] = false;\n      }, 100);\n    }\n  }\n}\n\ncustomElements.define('mce-list', List);\n\n//# sourceURL=webpack:///./src/list/list.js?");

/***/ }),

/***/ "./src/mce-polyfill.js":
/*!*****************************!*\
  !*** ./src/mce-polyfill.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Allen's Custom Element Polyfill for better performance\n */\n(function () {\n  let __customElements = {};\n  let debug = !!window.location.search.match(/\\?debug=true/);\n\n  // change a HTMLElement to a custom element by applying its prototype\n  let applyCustomElement = function (el, klass) {\n    if (el.tagName.match(/-/)) {\n      // el.__proto__ = klass.prototype;\n      Object.setPrototypeOf(el, klass.prototype);\n      el._init && el._init();\n      setTimeout(function () {\n        el.connectedCallback && el.connectedCallback();\n      });\n    }\n  };\n\n  // window.customElement equivalent\n  let CustomElements = {\n    define: function (name, klass) {\n      __customElements[name] = klass;\n      // this is called before or after window.onload. Define any tag found in HTML\n      // this also may cause missing elements dynamically loaded before MutationObserver kicks in\n      debug && console.log('CustomElements.define.......................');\n      Array.from(document.querySelectorAll(name)).forEach(function (el) {\n        applyCustomElement(el, __customElements[name]);\n      });\n    }\n  };\n\n  // when document content is loaded, it checks all custom element and initialized it\n  let checkAndApplyAllCustomElements = function (el) {\n    debug && console.log('checkAndApplyAllCustomElements..........', el);\n    for (let name in __customElements) {\n      debug && console.log('checkAndApplyAllCustomElements..........', el.querySelectorAll(name));\n      Array.from(el.querySelectorAll(name)).forEach(function (el) {\n        if (el.constructor.name.match(/^HTML\\w*Element$/)) {\n          applyCustomElement(el, __customElements[name]);\n        }\n      });\n    }\n  };\n\n  let checkAndApplyCustomElement = function (node) {\n    let nodeName = node.nodeName.toLowerCase();\n    if (node.nodeType === Node.ELEMENT_NODE && __customElements[nodeName] && // defined as a custom element\n    node.constructor.name.match(/^HTML\\w*Element$/)) {\n      // and not yet initialized\n      debug && console.log('observer....................... 2', node);\n      applyCustomElement(node, __customElements[nodeName]);\n    }\n  };\n\n  let observer = new MutationObserver(function (mutationRecords) {\n\n    mutationRecords.forEach(function (mutationRecord) {\n      if (mutationRecord.type == 'childList') {\n        // e.g. attribures, characterData\n        Array.from(mutationRecord.addedNodes).forEach(function (node) {\n          //initialize node itself if a custom element \n          checkAndApplyCustomElement(node);\n\n          //initialize children of the node \n          if (node.nodeType === Node.ELEMENT_NODE) {\n            debug && console.log('observer....................... 1', node);\n            Array.from(node.querySelectorAll('*')).forEach(function (el) {\n              checkAndApplyCustomElement(el);\n            });\n          }\n        });\n\n        Array.from(mutationRecord.removedNodes).forEach(function (node) {\n          //process children of the node \n          node.disconnectedCallback && node.disconnectedCallback();\n\n          //process children of the node \n          if (node.nodeType === Node.ELEMENT_NODE) {\n            Array.from(node.querySelectorAll('*')).forEach(function (el) {\n              el.disconnectedCallback && el.disconnectedCallback();\n            });\n          }\n        });\n      }\n    });\n  });\n\n  // polyfill window.customElements(obj)\n  if (!window.customElements) {\n    window.customElements = CustomElements;\n    window.addEventListener('load', function () {\n      let options = { childList: true, subtree: true };\n      observer.observe(document.body, options);\n      checkAndApplyAllCustomElements(document.body);\n    });\n  }\n\n  // polyfill Object.values(obj)\n  if (!Object.values) {\n    // Safari does not have this. hmm\n    Object.values = function (obj) {\n      return Object.keys(obj).map(function (key) {\n        return obj[key];\n      });\n    };\n  };\n\n  // polyfill el.matches(selector)\n  if (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n  // polyfill el.closest(selector)\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      var el = this;\n      if (!document.documentElement.contains(el)) return null;\n      do {\n        if (el.matches(s)) return el;\n        el = el.parentElement;\n      } while (el !== null);\n      return null;\n    };\n  }\n})();\n\n//# sourceURL=webpack:///./src/mce-polyfill.js?");

/***/ }),

/***/ "./src/menu/menu.js":
/*!**************************!*\
  !*** ./src/menu/menu.js ***!
  \**************************/
/*! exports provided: Menu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Menu\", function() { return Menu; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * Menus display a list of choices on a transient sheet of material. \n *\n * [Material Design Spec.](https://material.io/guidelines/components/menus.html#menus-specs)\n * \n * ### example\n * ```\n *  <a href=\"javascript:showDemoMenu()\">Show/Hide Menu</a>\n *  <mce-menu id=\"demo-menu\" position=\"bottom-left\">\n *    <mce-nav-item icon=\"favorite\" shortcut=\"ctrl-d\">nav item text</mce-nav-item>\n *    <hr>\n *    <mce-nav-item class=\"mce-disabled\">Disabled</mce-nav-item>\n *    <mce-nav-item shortcut=\"ctrl-d\">nav-item text</mce-nav-item>\n *    <mce-nav-item icon=\"search\">nav-item text</mce-nav-item>\n *  </mce-menu>\n * ```\n *\n * <iframe height='265' scrolling='no' title='xppZrL' src='//codepen.io/allenhwkim/embed/xppZrL/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/xppZrL/'>xppZrL</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n * \n * ### `mce-menu` Style Classes\n *  |name||description|\n *  |---|---|\n *  |mce-visible|Indicates menu is visible or not\n * \n * ### `mce-menu` Child Element Attributes \n *  |name|value|description|\n *  |---|---|---|\n *  |position| string| Indicates the position of menu. Value is one of bottom-right, bottom-left, top-left, or top-right\n *  \n * ### `mce-menu` Child Element Style Classes\n *  |name||description|\n *  |---|---|\n *  |mce-divider| An horizontal line that separates group of menus.\n *  |mce-shortcut| shortcut text to be right positioned.\n */\nclass Menu extends HTMLElement {\n  connectedCallback() {\n    Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, (attr, val) => {\n      if (attr == 'class' && this.classList.contains('visible')) {\n        this.open();\n      }\n    });\n    this.hideMenu = this.close.bind(this); // so that hideMenu can be done from outside\n    this._addEventListener();\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('click', this.hideMenu);\n  }\n\n  /**\n   * open the menu by adding `visible` class\n   * when a menu is opening, all other menus are closed\n   * @returns {void}\n   */\n  open() {\n    // show only this\n    if (!this.classList.contains('mce-visible')) {\n      //  without, infinite loop, add <-> observe\n      this.classList.add('mce-visible');\n    }\n    // hide all other menus\n    Array.from(document.querySelectorAll('mce-menu')).forEach(menu => {\n      this.isSameNode(menu) === false && menu.classList.remove('mce-visible');\n    });\n    // When document is clicked, it closes all menus, but this remained to open\n    this.justShown = true; // in case when attribute is changed by outside of this\n    setTimeout(_ => this.justShown = false, 100);\n  }\n\n  /**\n   * close the menu by removing `visible` class\n   * @returns {void}\n   */\n  close(event) {\n    if (!this.justShown && !this.contains(event.target)) {\n      // if not clicked on menu\n      this.classList.remove('mce-visible');\n    }\n  }\n\n  _addEventListener() {\n    document.addEventListener('click', this.hideMenu);\n    this.addEventListener('close', _ => {\n      this.classList.remove('mce-visible');\n    }); //child can fire close. then close it\n  }\n}\n\ncustomElements.define('mce-menu', Menu);\n\n//# sourceURL=webpack:///./src/menu/menu.js?");

/***/ }),

/***/ "./src/nav-drawer/nav-drawer.js":
/*!**************************************!*\
  !*** ./src/nav-drawer/nav-drawer.js ***!
  \**************************************/
/*! exports provided: NavDrawer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavDrawer\", function() { return NavDrawer; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * The navigation drawer slides in from the left and contains the navigation destinations for your app.\n * The nav drawer spans the height of the screen, with everything behind it visible but darkened by a scrim. \n * When nav drawer opens, the document does not scroll any more. When it's closed, scrolling is enabled again.\n * \n * [Material Design Spec.](https://material.io/guidelines/patterns/navigation-drawer.html#navigation-drawer-specs)\n *\n * ### example\n * ```\n *   <a href=\"javascript:document.getElementById('#drawer').open()\">Show Navigation Drawer</a>\n *   <mce-nav-drawer id=\"drawer\">\n *     <mce-nav-item icon=\"favorite\">Favourite</mce-nav-item>\n *     <mce-nav-item icon=\"search\" class=\"mce-disabled\">Disabled</mce-nav-item>\n *     <mce-nav-item>Alarm</mce-nav-item>\n *     <hr>\n *     <mce-nav-item icon=\"music_note\">Music</mce-nav-item>\n *   </mce-nav-drawer>\n * ``` \n *\n * <iframe height='265' scrolling='no' title='jYYWLE' src='//codepen.io/allenhwkim/embed/jYYWLE/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/jYYWLE/'>jYYWLE</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * \n * ### `mce-nav-drawer` Style Classes\n *  |name||description|\n *  |---|---|\n *  |mce-visible| indicates nav drawer is open state\n * \n * ### `mce-nav-drawer` Child Element Style Classes\n *  |name||description|\n *  |---|---|\n *  |mce-divider| An horizontal line that separates group of navigable items.\n */\nclass NavDrawer extends HTMLElement {\n  connectedCallback() {\n    Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, (attr, val) => {\n      if (attr === 'class') {\n        // if drawer shown, disable body scroll\n        document.body.style.overflow = this.classList.contains('mce-visible') ? 'hidden' : '';\n      }\n    });\n    if (window.ce && window.ce.resizeHandler) {} else {\n      window.ce = { resizeHandler: _utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"windowResizeHandler\"] };\n      window.addEventListener('resize', window.ce.resizeHandler);\n      window.addEventListener('load', window.ce.resizeHandler);\n    }\n    setTimeout(_ => {\n      this.regroupedOnce = false;\n      this._regroupElements();\n    });\n  }\n\n  /**\n   * open the nav drawer by adding `visible` class\n   */\n  open() {\n    this.classList.add('mce-visible');\n  }\n\n  /**\n   * close the nav drawer by removing `visible` class\n   */\n  close() {\n    this.classList.remove('mce-visible');\n  }\n\n  _regroupElements() {\n    if (!this.regroupedOnce) {\n      let pageBlockerEl, contentsEl;\n      pageBlockerEl = document.createElement('div');\n      pageBlockerEl.classList.add('mce-page-blocker');\n      pageBlockerEl.addEventListener('click', () => this.close());\n      this.appendChild(pageBlockerEl);\n\n      contentsEl = document.createElement('div');\n      contentsEl.classList.add('mce-contents');\n      this.appendChild(contentsEl);\n\n      Array.from(this.children).forEach(el => {\n        if (!el.isSameNode(contentsEl) && !el.isSameNode(pageBlockerEl)) {\n          contentsEl.appendChild(el);\n        }\n      });\n      this.addEventListener('close', _ => this.close()); //child can fire close. then close it\n    }\n    this.regroupedOnce = true;\n  }\n\n}\n\ncustomElements.define('mce-nav-drawer', NavDrawer);\n\n//# sourceURL=webpack:///./src/nav-drawer/nav-drawer.js?");

/***/ }),

/***/ "./src/nav-item/nav-item.js":
/*!**********************************!*\
  !*** ./src/nav-item/nav-item.js ***!
  \**********************************/
/*! exports provided: NavItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NavItem\", function() { return NavItem; });\nclass NavItem extends HTMLElement {\n  connectedCallback() {\n    this.regroupedOnce = false;\n    setTimeout(this._regroupElements.bind(this));\n  }\n\n  setActiveItem(event) {\n    Array.from(this.parentElement.querySelectorAll('mce-nav-item')).forEach(function (el) {\n      el.classList.remove('mce-active');\n    });\n    this.classList.add('mce-active');\n\n    let href = this.getAttribute('href');\n    if (href) {\n      window.location.href = href; //with href, go to the given url, \n      //with href, close it if the container is mce-nav-drawer or mce-menu\n      let customEvent = new CustomEvent('close', event);\n      this.dispatchEvent(customEvent);\n      event.preventDefault();\n    }\n  }\n\n  _regroupElements() {\n    if (!this.regroupedOnce) {\n      if (!this.querySelector('span.text')) {\n        this.innerHTML = `<span class=\"mce-text\">${this.innerHTML}</span>`;\n      }\n      this.addEventListener('click', this.setActiveItem.bind(this));\n      this.icon = this.getAttribute('icon');\n      this.shortcut = this.getAttribute('shortcut');\n      if (this.icon && !this.querySelector('mce-icon')) {\n        let isFAIcon = this.icon.match(/^fa-[a-z\\-]+$/);\n        let isMDIcon = this.icon.match(/^[a-z_]+$/);\n\n        this.iconEl = document.createElement('mce-icon');\n        if (isMDIcon) {\n          this.iconEl.innerHTML = this.icon;\n        } else if (isFAIcon) {\n          this.iconEl.insertAdjacentHTML('beforeend', `<i class=\"fa ${this.icon}\"></i>`);\n        } else {\n          this.iconEl.insertAdjacentHTML('beforeend', `<img src=\"${this.icon}\" />`);\n        }\n        this.insertBefore(this.iconEl, this.firstChild);\n      }\n      if (this.shortcut && !this.querySelector('mce-icon')) {\n        this.shortcutEl = document.createElement('div');\n        this.shortcutEl.classList.add('mce-shortcut');\n        this.shortcutEl.innerHTML = this.shortcut;\n        this.appendChild(this.shortcutEl);\n      }\n    }\n    this.regroupedOnce = true;\n  }\n}\n\ncustomElements.define('mce-nav-item', NavItem);\n\n//# sourceURL=webpack:///./src/nav-item/nav-item.js?");

/***/ }),

/***/ "./src/radio-button/radio-button.js":
/*!******************************************!*\
  !*** ./src/radio-button/radio-button.js ***!
  \******************************************/
/*! exports provided: RadioButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RadioButton\", function() { return RadioButton; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n//https://material.io/guidelines/layout/structure.html#structure-app-bar\n\nvar iconSVG = `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n    <path class=\"mce-checked\" d=\"M12 7c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n    <path class=\"mce-unchecked\" d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n  </svg>`;\n\n/**\n * Radio buttons allow the selection of a single option from a set.\n *\n * [Material Design Spec](https://material.io/guidelines/components/selection-controls.html#)\n * \n * ### example\n * ```\n * <mce-radio-button name=\"radio1\" id=\"radio1\"></mce-radio-button>\n * <label for=\"radio1\">Unchecked</label>\n * ```\n *\n * <iframe height='265' scrolling='no' title='yppeoe' src='//codepen.io/allenhwkim/embed/yppeoe/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/yppeoe/'>yppeoe</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `radio-button` Attributes \n * It accepts all `input` checkbox attributes. E.g., id, name, value, disaled, or checked\n */\nclass RadioButton extends HTMLElement {\n  connectedCallback() {\n    this.inputAttrs = ['id', 'name', 'value', 'disabled', 'checked'];\n    this.inputEl = this._addRealInput();\n    Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, (attr, val) => {\n      val === null ? this.inputEl.removeAttribute(attr) : this.inputEl.setAttribute(attr, val);\n    });\n    !this.classList.contains('mce-disabled') && Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"setTabbable\"])(this, _ => this.inputEl.click());\n  }\n\n  _addRealInput() {\n    let inputEl = document.createElement('input');\n    inputEl.setAttribute(\"type\", \"radio\");\n    Array.from(this.attributes).forEach(attr => {\n      if (this.inputAttrs.includes(attr.name) && attr.value !== null) {\n        inputEl.setAttribute(attr.name, attr.value);\n        attr.name === 'id' && this.setAttribute('id', 'mce-radio-button-' + attr.value);\n      }\n    });\n    this.appendChild(inputEl);\n    this.insertAdjacentHTML('beforeend', iconSVG);\n    return inputEl;\n  }\n\n}\n\ncustomElements.define('mce-radio-button', RadioButton);\n\n//# sourceURL=webpack:///./src/radio-button/radio-button.js?");

/***/ }),

/***/ "./src/refresh-indicator/refresh-indicator.js":
/*!****************************************************!*\
  !*** ./src/refresh-indicator/refresh-indicator.js ***!
  \****************************************************/
/*! exports provided: RefreshIndicator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RefreshIndicator\", function() { return RefreshIndicator; });\nconst SVG = `\n<svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 32 32\" width=\"32\" height=\"32\">\n  <circle cx=\"16\" cy=\"16\" r=\"11\"></circle>\n  <polygon points=\"21.75,16 32.25,16 27,21.25\"></polygon>\n</svg>`;\n\n/**\n * The refresh indicator appears only in conjunction with a refresh gesture or action. \n * Syncing does not display a refresh indicator.\n * \n * [Material Design Spec](https://material.io/guidelines/patterns/swipe-to-refresh.html#swipe-to-refresh-usage)\n * ### example\n * ```\n * <mce-refresh-indicator></mce-refresh-indicator>\n * ```\n *\n * <iframe height='265' scrolling='no' title='EooPvX' src='//codepen.io/allenhwkim/embed/EooPvX/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/EooPvX/'>EooPvX</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * \n * ### `refresh-indicator` Style Classes\n *  |name||description|\n *  |---|---|\n *  |mce-no-border| Without circle\n *  |mce-dark-bg| Dark background circle\n *  |mce-loading| Spining Animated Icon\n *  |mce-mini| Smaller Icon\n * \n */\nclass RefreshIndicator extends HTMLElement {\n\n  connectedCallback() {\n    this.insertAdjacentHTML('beforeend', SVG);\n  }\n\n}\n\ncustomElements.define('mce-refresh-indicator', RefreshIndicator);\n\n//# sourceURL=webpack:///./src/refresh-indicator/refresh-indicator.js?");

/***/ }),

/***/ "./src/router/default-loading-html.js":
/*!********************************************!*\
  !*** ./src/router/default-loading-html.js ***!
  \********************************************/
/*! exports provided: defaultLoadingHTML */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"defaultLoadingHTML\", function() { return defaultLoadingHTML; });\nvar defaultLoadingCSS = `\n    <style>\n      @keyframes mce-rotate{\n        from{transform:rotate(0)}\n        to{transform:rotate(359deg)}\n      }\n      mce-router {\n        display: block; \n        /*overflow: hidden;*/\n      }\n      mce-router > .mce-loading {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position:absolute; top: 0; left: 0; \n        width:100%; height: 100%; \n        min-height: 64px;\n        background-color: rgba(255,255,255,0.5); \n      }\n      mce-router > .mce-loading > svg {\n        animation: mce-rotate 1.4s infinite linear;\n        vertical-align: middle;\n      }\n      mce-router > .mce-loading > svg circle {\n        stroke-dasharray: 44.2336, 200;\n        stroke-dashoffset: -15;\n        stroke: var(--theme-color-500, #9e9e9e);\n        stroke-linecap: round;\n        opacity: 1;\n        stroke-width: 3;\n        fill: none;\n      }\n      mce-router > .mce-loading > svg polygon {\n        fill: var(--theme-color-500, #9e9e9e);\n        transform: rotate(314deg);\n        transform-origin: 16px 16px 0px;\n        opacity: 1;\n      }\n      /*\n      mce-router > .mce-router-target {\n        opacity: 0;\n        margin-left: 100%;\n      }\n      mce-router > .mce-router-target.mce-slide-in {\n        opacity: 1;\n        margin-left: 0%;\n        transition: all 0.25s;\n      }\n      */\n    </style>`;\n\nvar defaultLoadingHTML = defaultLoadingCSS + `\n    <div class=\"mce-loading\">\n      <svg xmlns=\"http://www.w3.org/2000/svg: viewBox=\"0 0 32 32\" width=\"32\" height=\"32\">\n        <circle cx=\"16\" cy=\"16\" r=\"11\"></circle>\n        <polygon points=\"21.75,16 32.25,16 27,21.25\"></polygon>\n      </svg>\n    </div>`;\n\n\n\n//# sourceURL=webpack:///./src/router/default-loading-html.js?");

/***/ }),

/***/ "./src/router/route.js":
/*!*****************************!*\
  !*** ./src/router/route.js ***!
  \*****************************/
/*! exports provided: Route */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Route\", function() { return Route; });\n/* harmony import */ var _mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mce-polyfill.js */ \"./src/mce-polyfill.js\");\n/* harmony import */ var _mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n\n/**\n *  Child element of a router,`<mce-router>`\n *\n *  \n * ### Example\n *  ```\n *  <mce-router>\n *     <mce-route path=\"/path1\" import=\"path1.html\">\n *       <mce-router>    <!-- knows that parent path is /path1 -->\n *         <mce-route path=\"/foo\" import=\"foo.html\" ></mce-route> <!-- responds to /path1/foo -->\n *         <mce-route path=\"/bar\" import=\"bar.html\"></mce-route> <!-- responds to /path1/bar -->\n *       </mce-router>\n *     </mce-route>\n *  </mce-router>\n *  ```\n *\n *  <iframe frameborder=\"no\" width=\"100%\" height=\"300\" src=\"https://embed.plnkr.co/FOLOB9?show=preview\"></iframe>\n *  <iframe frameborder=\"no\" width=\"100%\" height=\"300\" src=\"https://embed.plnkr.co/iyCwi9?show=preview\"></iframe>\n *\n *  ### Attributes\n *    * `path`\n *      _required_,  path to respond\n *    * `import`\n *      _required_,  url to load\n *    * `name`\n *      Optional, name of this route. Default. the name of path\n *    * `no-cache`\n *      Optional,Indicates that the route view template is not cached.\n *    * `resolve-func`\n *      Optional, route level resolve function. e.g. data loading. The resolved data will be set to `<mce-route>` element as a data. e.g. `$0.data.foo`, `$0.data.bar`\n */\nclass Route extends HTMLElement {\n  connectedCallback() {\n    // add this to the parent route\n    this.router = this.closest('mce-router');\n    this.path = this.getAttribute('path');\n    this.name = this.getAttribute('name') || this.path && this.path.replace('/', ' ');\n    this.redirect = this.getAttribute('redirect');\n    this.noCache = this.getAttribute('no-cache') !== null;\n    this.cachedTemplate = null;\n    this.resolveFunc = this.getAttribute('resolve-func') && this._getPromiseFunc('route', this.getAttribute('resolve-func'));\n\n    if (!this.path && !(this.import || this.redirect)) {\n      throw \"Invalid attributes for mce-route, required path and import\";\n    }\n  }\n\n  get import() {\n    let url,\n        attrFn,\n        attr = this.getAttribute('import');\n    if (attr && attr.match(/\\(.*\\)/)) {\n      attrFn = new Function('return ' + attr);\n      url = attrFn();\n    } else {\n      url = attr;\n    }\n    return url;\n  }\n\n  /**\n   * activate this route for the parent router. The activation sequence is;\n   * \n   * 1. resolve router function which is given from `mce-router[resolve-func]` \n   * 2. resolve route function which is given from `mce-route[resolve-func]` \n   * 3. run route start callback if given from `mce-route[on-route-start]` \n   * 4. determine html contents\n   *   4.1 if html contents is cached, contents is cached one.\n   *   4.2 if not cached, run http start callback if given from `mce-router[on-http-start]` \n   *   4.3 fetch html contents, then run http end callback if given from `mce-router[on-http-end]` \n   * 5. show slide-in animation and replace contents\n   * 6. run route end callback if given from `mce-router[on-route-end]` \n   */\n  activate() {\n    let aPromise = _ => Promise.resolve();\n    let routerResolveFn = this.router.resolveFunc || aPromise;\n    let routeResolveFn = this.resolveFunc || aPromise;\n    let onRouteStartFn = this.router.onRouteStart || aPromise;\n    let onRouteEndFn = this.router.onRouteEnd || aPromise;\n\n    this.state = window.history.stae;\n\n    this.router.showLoadingEl(true);\n\n    function buildImportUrl(importURL, matches) {\n      let url = importURL;\n      if (matches.length > 1) {\n        for (var i = 1; i < matches.length; i++) {\n          url = url.replace(/:[a-zA-Z_]+/, matches[i]);\n        }\n      }\n      return url;\n    }\n\n    routerResolveFn(this) // resolve router resolveFunc\n    .then(routerData => {\n      routerData && (this.router.data = routerData);\n      return routeResolveFn(this); // resolve route resolveFunc\n    }).then(routeData => {\n      routeData && (this.data = routeData);\n      return onRouteStartFn(this); // run onRouteStart \n    }).then(result => {\n      if (this.cachedTemplate) {\n        return this.cachedTemplate;\n      } else {\n        // fetch if not cached                       \n        if (this.import) {\n          // only run fetch when import Url is given\n          let url = buildImportUrl(this.import, this.matches),\n              options;\n          if (this.router.onHttpStart) {\n            let cbResp = this.router.onHttpStart(this); //callback response\n            url = cbResp.url || url;\n            options = cbResp.options || {};\n          }\n          return fetch(url, options).then(response => {\n            if (!response.ok) {\n              throw Error(`url: ${url}, status: ${response.statusText}`);\n            }\n            if (this.router.onHttpEnd) {\n              return this.router.onHttpEnd(response);\n            } else {\n              return response.text();\n            }\n          });\n        } else {\n          return null;\n        }\n      }\n    }).then(html => {\n      if (html) {\n        // only replace HTML when it is fetched or cached properly\n        !this.noCache && (this.cachedTemplate = html);\n        // Transtion effect. slide in from left\n        // this.router.targetEl.classList.remove('mce-slide-in');\n        setTimeout(_ => {\n          // this.router.targetEl.innerHTML = html; \n          Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_1__[\"setInnerHTML\"])(this.router.targetEl, html); // replace html and run <script> in html\n          // this.router.targetEl.classList.add('mce-slide-in');\n        }, 50);\n      }\n      this.router.showLoadingEl(false);\n      this.router.currentRoute = this;\n      return onRouteEndFn(this);\n    }).catch(error => {\n      this.router.debug && console.error('routing-error', error);\n      this.router.showLoadingEl(false);\n      throw error;\n    });\n  }\n\n  /* returns a function which accepts paramName and returns a promise */\n  _getPromiseFunc(paramName, funcStr) {\n    return function (param) {\n      let func = new Function(paramName, `return ${funcStr}`);\n      return Promise.resolve(func(param));\n    };\n  }\n}\n\ncustomElements.define('mce-route', Route);\n\n//# sourceURL=webpack:///./src/router/route.js?");

/***/ }),

/***/ "./src/router/router.js":
/*!******************************!*\
  !*** ./src/router/router.js ***!
  \******************************/
/*! exports provided: Router */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Router\", function() { return Router; });\n/* harmony import */ var _mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mce-polyfill.js */ \"./src/mce-polyfill.js\");\n/* harmony import */ var _mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_mce_polyfill_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _route_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./route.js */ \"./src/router/route.js\");\n/* harmony import */ var _default_loading_html_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./default-loading-html.js */ \"./src/router/default-loading-html.js\");\n\n\n\n\n/**\n * `mce-router` is an element that responds to url hash change.\n * mce-router watches the url hash changes, find a proper route, and load html.\n * On the other hand, mce-route(without r) does fetch, template caching, transition, and replacing, and throws error if erroneous\n * A router has div.router-html to show the path-related contents.\n * \n * ### example\n * ```\n * <mce-router>\n *   <mce-route path=\"page1\" import=\"page1.html\" no-cache=\"\"></mce-route>\n *   <mce-route path=\"page2\" import=\"page2.html\"></mce-route>\n *   <mce-route path=\"not-found\" import=\"not-found.html\"></mce-route>\n *   <mce-route path=\"\" redirect=\"page1\"></mce-route>\n * </mce-router>\n * ``` \n *\n *  <iframe frameborder=\"no\" width=\"100%\" height=\"300\" src=\"https://embed.plnkr.co/DiFMep?show=preview\"></iframe>\n *\n * ### `mce-router` atttibutes\n *  |name          |value     |description                                                  |\n *  |--------------|----------|-------------------------------------------------------------|\n *  |base-path     | url path | Optional. default '/', base path of this router. All route path will be prefixed with this base path.\n *  |import        | url      | **required**, url of partial html\n *  |no-cache      | boolean  | Optional,Indicates that the route view template is not cached.\n *  |resolve-func  | function | Optional, route level resolve function. e.g. data loading. The resolved data will be set to `<mce-route>` element as a data. e.g. `$0.data.foo`, `$0.data.bar`\n *  |on-route-start| function | Optional, injector function to be executed before route starts.\n *  |on-route-end  | function | Optional, injector function to be executed after route ends.\n *  |on-http-start | function | Optional, injector function to be executed before all http requests calls. This can change http request. It must return `fetch` [call option](https://developer.mozilla.org/en-US/docs/Web/API/Request/Request)\n *  |on-http-end   | function | Optional, injector function to be executed after all http responses. This can change http response. It must return a Promise\n *\n * #### `resolve-func` example\n * ```\n *    &lt;mce-router resolve-func=\"routerResolve()\">....&lt;/mce-router>\n *    &lt;script>\n *      function routerResolve(route) {\n *        console.log('executing router-resolve');\n *        return new Promise(function(resolve, reject) {\n *          setTimeout(function() { resolve({data: 'router'}); }, 1000);\n *        });\n *      },\n *    &lt;/script>\n * ```\n * #### `on-http-start` example\n * ```\n *    &lt;mce-router resolve-func=\"onHttpStart\">....&lt;/mce-router>\n *    &lt;script>\n *      function onHttpStart(route) {\n *        console.log('executing on-http-start');\n *        return {method: 'GET'}; // must return httpOptions\n *      },\n *    &lt;/script>\n * ```\n * #### `on-http-end` example\n * ```\n *    &lt;mce-router on-http-end=\"onHttpEnd\">....&lt;/mce-router>\n *    &lt;script>\n *      function onHttpEnd(response) { \n *        console.log('executing on-http-end');\n *        return response.text(); // must return a promise\n *      }\n *    &lt;/script>\n * ```\n * #### `on-route-start` example\n * ```\n *   &lt;mce-router on-route-start=\"onRouteStart\">....&lt;/mce-router>\n *   &lt;script>\n *     function onRouteStart(route) { \n *       console.log('executing on-route-start');\n *       return route;\n *     }\n *   &lt;/script>\n * ```\n * #### `on-route-end` example\n * ```\n *    &lt;mce-router on-route-end=\"onRouteEnd\">....&lt;/mce-router>\n *    &lt;script>\n *      function onRouteEnd(route) { \n *        console.log('executing on-route-end');\n *        return route;\n *      }\n *    &lt;/script>\n * ```\n */\nclass Router extends HTMLElement {\n  connectedCallback() {\n    this.basePath = this.getAttribute('base-path') || '';\n    this.debug = this.getAttribute('debug') === 'true';\n    this.currentRoute;\n\n    this.resolveFunc; // common resolve function route as parameter, and returning a Promise\n    this.onHttpStart; // a callback function, route as parameter, and returning a Promise\n    this.onHttpEnd; // a callvack funciton, route as parameter, returning a Promise\n\n    this.routes; // collection of <mce-route> children\n    this.defaultRoute;\n    this.popStateHandler = this._popStateHandler.bind(this); // saving it to be used by add/remove\n\n    this.style.position = 'relative'; //required to show loaing overlay\n    window.addEventListener('popstate', this.popStateHandler);\n    setTimeout(_ => {\n      this._setProperties();\n      this.popStateHandler();\n    });\n  }\n\n  disconnectedCallback() {\n    window.removeEventListener('popstate', this.popStateHandler);\n  }\n\n  showLoadingEl(show) {\n    this.loadingEl.style.display = show ? 'flex' : 'none';\n  }\n\n  get notFoundRoute() {\n    this._notFoundRoute = this._notFoundRoute || this._getUrlMatchingRoute(this.basePath + '/not-found') || this._getUrlMatchingRoute(this.basePath + 'not-found');\n    return this._notFoundRoute;\n  }\n\n  _getUrlMatchingRoute(path) {\n    let matchingRoute;\n\n    path = path || this._getRouterPath();\n    path = path.replace(/[\\/]{2,}/g, '/');\n\n    for (var i = 0; i < this.routes.length; i++) {\n      let route = this.routes[i];\n      let reStr = (this.basePath + route.path).replace(/[\\/]{2,}/g, '/');\n      let re = new RegExp('^' + reStr + '$', 'i');\n      this.debug && console.log('path', path, 're', re);\n\n      let matches = path.match(re);\n      if (matches) {\n        matchingRoute = route;\n        matchingRoute.matches = matches;\n        break;\n      }\n    }\n    return matchingRoute;\n  }\n\n  _popStateHandler(event) {\n    let route = this._getUrlMatchingRoute();\n    this.routerPath = this._getRouterPath();\n\n    if (route && route.redirect) {\n      route = this._getUrlMatchingRoute(route.redirect);\n      this._redirectTo(route.path);\n    } else if (route) {\n      route.activate();\n    } else {\n      // not-found\n      this.debug && console.log(`route not found for '${this._getRouterPath()}', redirecting to 'not-found'`);\n\n      if (this.defaultRoute) {\n        this.defaultRoute.activate();\n      } else if (this.notFoundRoute) {\n        this._redirectTo(this.notFoundRoute.path);\n      } else {\n        this.debug && console.error(`route not found for '/not-found' or 'not-found'`);\n      }\n    }\n  }\n\n  _redirectTo(path) {\n    let url = this.basePath + path;\n    let route = this._getUrlMatchingRoute(url);\n    route ? route.activate() : console.error('route not found for', url);\n  }\n\n  _setProperties() {\n    let resolveFunc = this.getAttribute('resolve-func');\n    let onHttpStart = this.getAttribute('on-http-start');\n    let onHttpEnd = this.getAttribute('on-http-end');\n    let onRouteStart = this.getAttribute('on-route-start');\n    let onRouteEnd = this.getAttribute('on-route-end');\n    this.resolveFunc = resolveFunc && this._getPromiseFunc('route', resolveFunc);\n    this.onHttpStart = onHttpStart && this._getPromiseFunc('route', onHttpStart);\n    this.onHttpEnd = onHttpEnd && this._getPromiseFunc('response', onHttpEnd);\n    this.onRouteStart = onRouteStart && this._getPromiseFunc('route', onRouteStart);\n    this.onRouteEnd = onRouteEnd && this._getPromiseFunc('route', onRouteEnd);\n\n    this.routes = Array.from(this.querySelectorAll('mce-route'));\n    this.routes.forEach(route => {\n      route.getAttribute('default') !== null && (this.defaultRoute = route);\n    });\n\n    this.targetEl = this._addTargetEl();\n    this.loadingEl = this._addLoadingEl();\n  }\n\n  _getRouterPath(href) {\n    href = href || window.location.href;\n\n    let parsed = new URL(href.replace(/[\\/]{2,}/g, '/')),\n        routerPath;\n\n    if (parsed.hash) {\n      if (this.basePath === '' && !parsed.hash.match(/\\//)) {\n        // pure hash reference\n        routerPath = parsed.hash.replace('#', '');\n      } else {\n        parsed = new URL(parsed.hash.replace('#', ''), window.location.origin);\n        // routerPath = parsed.pathname.replace(/^\\//,'');\n        routerPath = parsed.pathname;\n      }\n    } else {\n      routerPath = '';\n    }\n\n    return routerPath;\n  }\n\n  _addLoadingEl() {\n    let loadingEl = this.querySelector('.mce-loading');\n    if (!loadingEl) {\n      this.insertAdjacentHTML('beforeend', _default_loading_html_js__WEBPACK_IMPORTED_MODULE_2__[\"defaultLoadingHTML\"]);\n      loadingEl = this.querySelector('div.mce-loading');\n    }\n    return loadingEl;\n  }\n\n  _addTargetEl() {\n    this.insertAdjacentHTML('beforeend', '<div class=\"mce-router-target\"></div>');\n    return this.querySelector('div.mce-router-target');\n  }\n\n  /* returns a function which accepts paramName and returns a promise */\n  _getPromiseFunc(paramName, funcStr) {\n    if (paramName === 'response') {\n      funcStr = `let res = ${funcStr};\\n return res || response.text();`;\n    } else {\n      funcStr = `return ${funcStr}`;\n    }\n    return function (param) {\n      let func = new Function(paramName, funcStr);\n      return Promise.resolve(func(param));\n    };\n  }\n}\n\ncustomElements.define('mce-router', Router);\n\n//# sourceURL=webpack:///./src/router/router.js?");

/***/ }),

/***/ "./src/search/search.js":
/*!******************************!*\
  !*** ./src/search/search.js ***!
  \******************************/
/*! exports provided: Search */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Search\", function() { return Search; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\nconst HTML = `\n  <label for=\"__ID__\" tabindex=\"0\">\n    <mce-icon>search</i>\n  </label>\n  <span class=\"mce-input-wrapper\">\n    <input id=\"__ID__\" autocomplete=\"off\" placeholder=\"Search\">\n    <mce-icon class=\"mce-clear\">clear</i>\n  </span>\n`;\n\n/**\n * Search allows users to locate app content quickly.\n *\n * [Material Design Spec](https://material.io/guidelines/patterns/search.html#search-in-app-search)\n *\n * ### example\n * ```\n * <mce-search on-search=\"alert('You are searching...'+keyword)\"></mce-search>\n * ```\n *\n * <iframe height='265' scrolling='no' title='GyyovP' src='//codepen.io/allenhwkim/embed/GyyovP/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/GyyovP/'>GyyovP</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * \n * ### `mce-button` Attributes \n *  |name|value|description|\n *  |---|---|---|\n *  |on-search|function| A Javascript code to execute for search with the keyword. e.g. `alert(keyword)`\n * \n */\nclass Search extends HTMLElement {\n  connectedCallback() {\n    this.regroupedOnce = false;\n    this.inputEl;\n    this.inputWrapper;\n    this._regroupElements();\n    setTimeout(_ => {\n      this.inputWrapper = this.querySelector('.mce-input-wrapper');\n      this.inputEl = this.querySelector('input');\n      this._addEventListeners();\n    });\n  }\n\n  close() {\n    this.inputEl.value = '';\n    this.inputWrapper.classList.remove('mce-visible');\n  }\n\n  _regroupElements() {\n    if (!this.regroupedOnce) {\n      let id = 'mce-search-' + Math.round(Math.random() * Math.pow(10, 9));\n      this.innerHTML = HTML.replace('__ID__', id);\n    }\n    this.regroupedOnce = true;\n  }\n\n  _addEventListeners() {\n    let searchIcon = this.querySelector('label');\n    let clearIcon = this.querySelector('.mce-clear');\n\n    // when search icon is clicked, show input field\n    searchIcon.addEventListener('mouseup', this._showInputField.bind(this));\n    searchIcon.addEventListener('touchend', this._showInputField.bind(this));\n\n    searchIcon.addEventListener('keydown', _ => {\n      (event.key === ' ' || event.key === 'Enter') && this.inputWrapper.classList.toggle('visible');\n    });\n\n    // when input is not focused, hide input field\n    this.inputEl.addEventListener('blur', _ => this.close());\n    this.inputEl.addEventListener('keydown', event => {\n      event.key === 'Enter' && this._executeOnSearch();\n    });\n\n    // when clear is pressed, clear input field\n    clearIcon.addEventListener('mouseup', this._clearInputField.bind(this));\n    clearIcon.addEventListener('touchend', this._clearInputField.bind(this));\n\n    // execute custom search function\n    this.addEventListener('search', _ => this._executeOnSearch());\n  }\n\n  _showInputField(event) {\n    if (this.inputWrapper.classList.contains('mce-visible') && this.inputEl.value) {\n      let customEvent = new CustomEvent('search', event);\n      this.dispatchEvent(customEvent);\n    } else {\n      this.inputWrapper.classList.toggle('mce-visible');\n      setTimeout(_ => this.inputEl.focus());\n    }\n  }\n\n  _clearInputField(event) {\n    this.inputEl.focus();\n    this.inputEl.value = '';\n    event.preventDefault();\n  }\n\n  _executeOnSearch() {\n    if (this.inputEl.value) {\n      let onSearch = this.getAttribute('on-search');\n      let func = new Function('keyword', onSearch);\n      func(this.inputEl.value);\n    }\n  }\n\n}\n\ncustomElements.define('mce-search', Search);\n\n//# sourceURL=webpack:///./src/search/search.js?");

/***/ }),

/***/ "./src/snackbar/snackbar.js":
/*!**********************************!*\
  !*** ./src/snackbar/snackbar.js ***!
  \**********************************/
/*! exports provided: Snackbar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Snackbar\", function() { return Snackbar; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * Snackbars contain a single line of text directly related to the operation performed. \n * They may contain a text action, but no icons.\n *\n * [Material Design Spec](https://material.io/guidelines/components/snackbars-toasts.html#snackbars-toasts-specs)\n *\n * ### example\n * ```\n * <mce-snackbar>Message has been processed.</mce-snackbar>\n * ```\n *\n * <iframe height='265' scrolling='no' title='mce template' src='//codepen.io/allenhwkim/embed/PEJKKo/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/PEJKKo/'>mce template</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-snackbar` attributes\n *  |name|value|description|\n *  |---|---|--|\n *  |bottom|number|distance from bottom in pixel. e.g. 30|\n * \n * ### `mce-snackbar` classes \n *  |name|description|\n *  |---|---|\n *  |mce-visible| show this snackbar|\n * \n */\n\nclass Snackbar extends HTMLElement {\n  connectedCallback() {\n    this.bottom = this.getAttribute('bottom') || '56';\n    this.open();\n  }\n\n  set message(msg) {\n    if (this.querySelector('.text')) {\n      this.querySelector('.text').innerHTML = msg;\n    } else {\n      this.innerHTML = msg;\n    }\n  }\n\n  /**\n   * show mce-snackbar by adding `mce-visible` class\n   * @param {string} msg message to show\n   * @returns {void}\n   */\n  open(msg) {\n    msg && (this.message = msg);\n    this.style.bottom = this.bottom + 'px';\n    this.classList.add('mce-visible');\n    setTimeout(_ => {\n      this.classList.remove('mce-visible');\n    }, 3000);\n  }\n\n  /**\n   * close mce-snackbar by removing `mce-visible` class\n   * @returns {void}\n   */\n  close() {\n    this.classList.remove('mce-visible');\n  }\n\n}\n\ncustomElements.define('mce-snackbar', Snackbar);\n\n//# sourceURL=webpack:///./src/snackbar/snackbar.js?");

/***/ }),

/***/ "./src/switch/switch.js":
/*!******************************!*\
  !*** ./src/switch/switch.js ***!
  \******************************/
/*! exports provided: Switch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Switch\", function() { return Switch; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n//https://material.io/guidelines/layout/structure.html#structure-app-bar\n\n/**\n * Switches allow a selection to be turned on or off.\n *\n * [Material Design Spec](https://material.io/guidelines/components/selection-controls.html#)\n *\n * ## Examples\n * ```\n * <mce-switch id=\"checkbox21\"></mce-switch> <label for=\"checkbox21\">Unchecked</label>\n * ```\n *\n * <iframe height='265' scrolling='no' title='LeeGzQ' src='//codepen.io/allenhwkim/embed/LeeGzQ/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/LeeGzQ/'>LeeGzQ</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-switch` Attributes \n * It accepts all `input` checkbox attributes. E.g., id, name, value, disaled, or checked\n */\nclass Switch extends HTMLElement {\n\n  connectedCallback() {\n    this.inputAttrs = ['id', 'name', 'value', 'disabled', 'checked'];\n    this.inputEl = this._addRealInput();\n    Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"])(this, (attr, val) => {\n      val === null ? this.inputEl.removeAttribute(attr) : this.inputEl.setAttribute(attr, val);\n    });\n    Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"setTabbable\"])(this, _ => this.inputEl.click());\n  }\n\n  _addRealInput() {\n    let inputEl = document.createElement('input');\n    inputEl.setAttribute(\"type\", \"checkbox\");\n    Array.from(this.attributes).forEach(attr => {\n      if (this.inputAttrs.includes(attr.name) && attr.value !== null) {\n        inputEl.setAttribute(attr.name, attr.value);\n        attr.name === 'id' && this.setAttribute('id', 'mce-switch-' + attr.value);\n      }\n    });\n    inputEl.addEventListener('click', _ => {\n      inputEl.checked ? this.setAttribute('checked', '') : this.removeAttribute('checked');\n    });\n    this.appendChild(inputEl);\n    return inputEl;\n  }\n\n}\n\ncustomElements.define('mce-switch', Switch);\n\n//# sourceURL=webpack:///./src/switch/switch.js?");

/***/ }),

/***/ "./src/tabs/tabs.js":
/*!**************************!*\
  !*** ./src/tabs/tabs.js ***!
  \**************************/
/*! exports provided: Tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tabs\", function() { return Tabs; });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"./src/utils/index.js\");\n\n\n/**\n * Tabs make it easy to explore and switch between different views.\n *\n * [Material Design Spec](https://material.io/guidelines/components/tabs.html#tabs-specs)\n * \n * ### Example\n *\n * ```\n * <mce-tabs>\n *   <mce-nav-item icon=\"favorite\"></mce-nav-item>\n *   <mce-nav-item icon=\"search\" class=\"mce-active\"></mce-nav-item>\n *   <mce-nav-item icon=\"alarm\"></mce-nav-item>\n * </mce-tabs>\n * ```\n *\n * <iframe height='265' scrolling='no' title='VyyeMd' src='//codepen.io/allenhwkim/embed/VyyeMd/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/VyyeMd/'>VyyeMd</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n * ### `mce-tabs` Style Classes\n *  |name||description|\n *  |---|---|\n *  |mce-active| indicates currently active tab with indicator\n * \n */\n\nclass Tabs extends HTMLElement {\n\n  connectedCallback() {\n    setTimeout(_ => {\n      this.indicatorEl = this._addIndicatorEl();\n      this._addEventListener();\n      setTimeout(this._selectActiveTab.bind(this), 100);\n    });\n  }\n\n  getActiveTab(event) {\n    let activeTab;\n    if (event) {\n      // if clicked or tapped\n      activeTab = event.target.closest('mce-nav-item');\n    } else {\n      activeTab = this.querySelector('mce-nav-item.mce-active');\n      activeTab = activeTab || this.querySelector('mce-nav-item:first-child');\n    }\n    return activeTab;\n  }\n\n  _addIndicatorEl() {\n    let el = document.createElement('div');\n    let thisBCR = this.getBoundingClientRect();\n    let activeTabBCR = this.getActiveTab().getBoundingClientRect();\n\n    el.classList.add('mce-indicator');\n    el.style.left = (activeTabBCR.left - thisBCR.left) / thisBCR.Width * 100 + '%';\n    this.appendChild(el);\n    return el;\n  }\n\n  /**\n   * animate the indicator below the active tab\n   */\n  _selectActiveTab(event) {\n    let indicatorEl = this.indicatorEl;\n    let numTab = this.querySelectorAll('mce-nav-item').length;\n    let activeTab = this.getActiveTab(event);\n    // console.log('activeTab', activeTab, event && event.target);\n\n    Array.from(this.querySelectorAll('mce-nav-item')).forEach(navItem => {\n      navItem.setAttribute('tabindex', navItem.isSameNode(activeTab) ? 0 : -1);\n    });\n    // activeTab.focus();\n\n    setTimeout(_ => {\n      // wait for mce-nav-item.active changes\n      let thisBCR = this.getBoundingClientRect();\n      let activeTabBCR = activeTab.getBoundingClientRect();\n\n      let indicatorFromPct = parseFloat(indicatorEl.style.left || 0);\n      let indicatorToPct = (activeTabBCR.left - thisBCR.left) / thisBCR.width;\n      let move = indicatorToPct * 100 - indicatorFromPct;\n\n      indicatorEl.style.width = parseFloat(100 / numTab) + '%';\n\n      Object(_utils_index_js__WEBPACK_IMPORTED_MODULE_0__[\"animate\"])({\n        duration: 450,\n        timing: function (timeFraction) {\n          return 1 - Math.sin(Math.acos(timeFraction));\n        },\n        draw: function (progress) {\n          indicatorEl.style.left = indicatorFromPct + progress * move + '%';\n        }\n      });\n    });\n  }\n\n  _addEventListener() {\n    // for each tab, set click and keydown event listeners\n    Array.from(this.querySelectorAll('mce-nav-item')).forEach(navItem => {\n      //when clicked, open the tab\n      navItem.addEventListener('click', this._selectActiveTab.bind(this));\n      // listen to keyboard up,down,next,right,space and enter\n      navItem.addEventListener('keydown', event => {\n        //with arrow keys, move tab\n        let tabMoveIndex = event.key === \"ArrowRight\" || event.key === \"ArrowUp\" ? 1 : event.key === \"ArrowLeft\" || event.key === \"ArrowDown\" ? -1 : 0;\n        let tabToMove,\n            activeTabIndex = 0;\n        let activeTab = this.getActiveTab(event);\n        let navItems = this.querySelectorAll('mce-nav-item');\n\n        for (var i = 0; i < navItems.length; i++) {\n          navItems[i].isSameNode(activeTab) && (activeTabIndex = i);\n        }\n\n        tabToMove = navItems[(activeTabIndex + tabMoveIndex + navItems.length) % navItems.length];\n        tabToMove && !tabToMove.isSameNode(activeTab) && tabToMove.click();\n\n        //with space or enter, open tab\n        event.key === \"Enter\" && navItem.click();\n      });\n    });\n  }\n\n}\n\ncustomElements.define('mce-tabs', Tabs);\n\n//# sourceURL=webpack:///./src/tabs/tabs.js?");

/***/ }),

/***/ "./src/text-field/text-field.js":
/*!**************************************!*\
  !*** ./src/text-field/text-field.js ***!
  \**************************************/
/*! exports provided: TextField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextField\", function() { return TextField; });\n/**\n * Text fields allow users to input, edit, and select text. Text fields typically reside in forms but can appear in other places, like dialog boxes and search. Text fields contain the following elements; label, input text field, placeholder text, helper text, required field indicator, icon, and error messages.\n * \n * [Material Design Spec](https://material.io/guidelines/components/text-fields.html#text-fields-layout)\n *\n * ###  Example\n * ```\n * <mce-text-field disabled multi-line\n *   icon=\"favorite\"\n *   helper-text=\"this is helper text\"\n *   label=\"this is label\"\n *   maxlength=\"100\"\n *   minlength=\"10\"\n *   minlength-error=\"invalid text min. length\"\n *   maxlength-error=\"invalid text max. length\"\n *   optional=\"(optional)\"\n *   pattern-error=\"invalid text pattern\"\n *   pattern=\"[a-z]+\"\n *   placeholder=\"this is hint text\"\n *   prefix=\"$\"\n *   readonly\n *   required=\"this field is required\"\n *   suffix=\"dollars\"></mce-text-field>\n * ```\n *\n * <iframe height='265' scrolling='no' title='BJJjwe' src='//codepen.io/allenhwkim/embed/BJJjwe/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/BJJjwe/'>BJJjwe</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n * \n * ### `mce-text-field` Attributes \n *  |name|value|description|\n *  |---|---|---|\n *  |disabled| |Disabled Status. No interaction is allowed with this status.\n *  |multi-line| | Allows multi-line input\n *  |icon| text |Icon name that will be located on the left-side. e.g. credit_card\n *  |label| text |Label text that will be displayed when not active, and minized when active.\n *  |optional| text |Text to be appended at the lable indicating it is optional. Default. \"(optional)\"\n *  |suffix | text |Read-only input helper to be displayed at the end of input field. e.g., 'dollars'\n *  |prefix| text|Read-only input helper to be displayed at the beginning of input field. e.g., '$'\n *  |suffix | text |Read-only input helper to be displayed at the end of input field. e.g., 'dollars'\n *  |required-error| text |Error message when 'required' is given with no value. e.g., 'Fill out the column'. Default. 'This field is required'\n *  |min-error| text | Error message when 'min' is given but not valid. Default. 'invalid min. value''\n *  |max-error| text  |Error message when 'max' is given but not valid. Default. 'invalid max. value''\n *  |minlength-error| text |Error message when 'minlength' is given but not valid. Default. 'invalid min. length''\n *  |maxlength-error| text  |Error message when 'maxlength' is given but not valid. Default. 'invalid max. length''\n *  |pattern-error| text |Error message when 'pattern' is given with regular expression but not valid. Default. 'invalid input text'\n *  |type-error| text |Error message when 'type' is given but not. Default. 'invalid input for type <type>'\n * \n *  `mce-text-field` passes all attributes to `input` field, which means all standard input attributes are acceptable,\n *  and it affects the actual input. Sometime this can cause some strange behaviour, \n *  but it's up to user without blocking it. For example `type=\"range\"` is not for text field, but still\n *  working without error.\n *  \n * ### `mce-text-field` Classes\n *  |name|description|\n *  |---|---|\n *  |mce-empty | Indicating that the field is empty. When empty, helper text is shown. When not empty and errorneous, error message is shown.\n *  |mce-invalid | Indicating that the field is errorneous. With this status, error message is shown if given.\n *  |mce-active| Indicating the input field is focused and active by minimizing label and showing placeholder text.\n *  |mce-dirty| Indicating user has entered any input to this field. Error message is only displayed when it is dirty status.\n */\nclass TextField extends HTMLElement {\n  connectedCallback() {\n    this.id = 'mce-text-field-' + Math.round(Math.random() * Math.pow(10, 9));\n    this._buildHTML();\n\n    this.inputEl = this.querySelector('#' + this.id);\n    this._addEventListeners();\n  }\n\n  /**\n   * @property {boolean} disabled - disabled status\n   */\n  get disabled() {\n    return this.getAttribute('disabled') !== '';\n  }\n\n  /**\n   * set disabled status\n   * @param {boolean} true of false\n   * @returns {void}\n   */\n  set disabled(disabled) {\n    disabled ? this.setAttribute('disabled', '') : this.removeAttribute('disabled');\n  }\n\n  /**\n   * @returns {Object} registered error messages. e.g., <pre>\n   *  {\n   *    rangeUnderflow: 'invalid min.value',\n   *    rangeOverflow: 'invalid max.value',\n   *    stepMismatch: 'invalid value(step)',\n   *    tooShort:  'invalid min. length',\n   *    tooLong: 'invalid max. length',\n   *    patternMismatch: 'invalid input text',\n   *    valueMissing: 'this field is requierd',\n   *    typeMismatch:  'invalid input for type email',\n   *    customError: 'invaid input(custom error)',\n   *    invalidError: 'invaid input'\n   *  } </pre>\n   */\n  get errorMessages() {\n    let errorMessages = this.__cachedErrorMessages || {\n      rangeUnderflow: this.getAttribute('min-error') || 'invalid min. value',\n      rangeOverflow: this.getAttribute('max-error') || 'invalid max. value',\n      stepMismatch: this.getAttribute('step-error') || 'invalid value(step)',\n      tooShort: this.getAttribute('minlength-error') || 'invalid min. length',\n      tooLong: this.getAttribute('maxlength-error') || 'invalid max. length',\n      patternMismatch: this.getAttribute('pattern-error') || 'invalid input text',\n      valueMissing: this.getAttribute('required-error') || 'this field is requierd',\n      typeMismatch: this.getAttribute('type-error') || 'invalid input for type, ' + this.getAttribute('type'),\n      customError: this.getAttribute('custom-error') || 'invaid input(custom error)',\n      invalidError: this.getAttribute('invalid-error') || 'invaid input'\n    };\n    this.__cachedErrorMessages = errorMessages;\n    return errorMessages;\n  }\n\n  _buildHTML() {\n    let icon = this.getAttribute('icon') || '';\n    let type = this.getAttribute('type') || 'text';\n    let hintText = this.getAttribute('placeholder') || '';\n    let helpetText = this.getAttribute('helper-text') || '';\n    let label = this.getAttribute('label') || '';\n    let prefix = this.getAttribute('prefix') || '';\n    let suffix = this.getAttribute('suffix') || '';\n    let optionalText = this.getAttribute('optional') || '';\n    let helperText = this.getAttribute('helper-text') || '';\n    let requiredText = this.getAttribute('required') !== null ? ' *' : '';\n    let multiLine = this.getAttribute('multi-line') !== null ? true : false;\n\n    let attrs = [];\n    for (let i = 0; i < this.attributes.length; i++) {\n      let attr = this.attributes[i];\n      !attr.name.match(/-/) && attrs.push(`${attr.name}=\"${attr.value}\"`);\n    }\n    let attributes = attrs.join(' ');\n    let inputWrapperHTML = multiLine ? `<textarea class=\"mce-input\" id=\"${this.id}\" ${attributes}>${this.getAttribute('value') || ''}</textarea>` : `<div class=\"mce-prefix\">${prefix}</div>\\n\n       <input class=\"mce-input\" type=\"${type}\" id=\"${this.id}\" ${attributes} />\\n\n       <div class=\"mce-suffix\">${suffix}</div>\\n`;\n\n    let html = `\n      <mce-icon class=\"mce-icon\">${icon}</mce-icon>\n      <div class=\"mce-container\">\n        <label for=\"${this.id}\" style=\"\">${label}${optionalText}${requiredText}</label>\n        <div class=\"mce-input-wrapper\">\n          ${inputWrapperHTML}\n        </div>\n        <hr />\n        <div class=\"mce-helper-text\">${helperText}</div>\n        <div class=\"mce-error-messages\"></div>\n      </div>\n    `;\n    this.insertAdjacentHTML('beforeend', html);\n  }\n\n  _getErrors() {\n    let errors = {};\n    for (var key in this.inputEl.validity) {\n      if (key !== 'valid' && this.inputEl.validity[key]) {\n        errors[key] = this.errorMessages[key];\n      }\n    }\n    if (this.getAttribute('maxlength')) {\n      let tooLong = this.inputEl.value.length > parseInt(this.getAttribute('maxLength'));\n      tooLong && (errors.tooLong = this.errorMessages.tooLong);\n    }\n    return errors;\n  }\n\n  _addEventListeners() {\n    let setStatus = () => {\n      let empty = !this.inputEl.value;\n      let error = Object.values(this._getErrors())[0];\n      let errMsgEl = this.querySelector('.mce-error-messages');\n      let dirty = this.classList.contains('mce-dirty');\n\n      empty ? this.classList.add('mce-empty') : this.classList.remove('mce-empty');\n      if (dirty && error) {\n        this.classList.add('mce-invalid');\n        errMsgEl.innerHTML = error;\n      } else {\n        this.classList.remove('mce-invalid');\n      }\n    };\n\n    setStatus();\n\n    this.addEventListener('click', event => {\n      this.classList.add('mce-active');\n      this.inputEl.focus();\n    });\n\n    this.inputEl.addEventListener('blur', event => {\n      this.classList.remove('mce-active');\n    });\n\n    this.inputEl.addEventListener('change', event => {\n      this.classList.add('mce-dirty');\n      setStatus();\n    });\n\n    if (this.querySelector('textarea')) {\n      // if multiline, autoresize the input height\n      let textarea = this.inputEl;\n      textarea.style.height = 'auto';\n      function delayedResize() {\n        // try {\n        //   textarea.value = JSON.stringify(JSON.parse(textarea.value), null, '  ');\n        // } catch(e) {}\n        window.setTimeout(function () {\n          textarea.style.height = textarea.scrollHeight + 'px';\n          textarea.closest('.mce-container').style.height = textarea.scrollHeight + 60 + 'px';\n        }, 500);\n      }\n      textarea.addEventListener('change', delayedResize, false);\n      textarea.addEventListener('cut', delayedResize, false);\n      textarea.addEventListener('paste', delayedResize, false);\n      textarea.addEventListener('drop', delayedResize, false);\n      textarea.addEventListener('keydown', delayedResize, false);\n\n      textarea.focus();\n      textarea.select();\n      delayedResize();\n    }\n  }\n\n  _autoResizeTextarea() {}\n}\n\ncustomElements.define('mce-text-field', TextField);\n\n//# sourceURL=webpack:///./src/text-field/text-field.js?");

/***/ }),

/***/ "./src/tooltip/tooltip.js":
/*!********************************!*\
  !*** ./src/tooltip/tooltip.js ***!
  \********************************/
/*! exports provided: Tooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tooltip\", function() { return Tooltip; });\n// FYI, http://plnkr.co/edit/I9mfBNIKJtALHwKmS0CH?p=preview. ARIA tooltip approach.\n\n/**\n * Tooltips are text labels that appear when the user hovers over, focuses on, or touches an element.\n * \n * [Material Design Spec](https://material.io/guidelines/components/tooltips.html)\n *\n * ###  Example\n * ```\n * <mce-button class=\"mce-raised\">\n *   <mce-tooltip>This is a tooltip for a button</mce-tooltip>\n *   Mouse\n * </mce-button>\n * <mce-button class=\"mce-raised\" style=\"float: right\">\n *   <mce-tooltip>This is a tooltip for a button</mce-tooltip>\n *   Tooltip\n * </mce-button>\n * ```\n *\n * <iframe height='265' scrolling='no' title='ZvvQap' src='//codepen.io/allenhwkim/embed/ZvvQap/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='https://codepen.io/allenhwkim/pen/ZvvQap/'>ZvvQap</a> by Allen kim (<a href='https://codepen.io/allenhwkim'>@allenhwkim</a>) on <a href='https://codepen.io'>CodePen</a>.\n</iframe>\n *\n */\nclass Tooltip extends HTMLElement {\n  connectedCallback() {\n    this._addEventListeners();\n  }\n\n  _addEventListeners() {\n    this.parentElement.addEventListener('mouseenter', event => {\n      this.originalPos = {\n        parent: event.target,\n        nextSibling: this.nextSiblingNode\n      };\n      this._showTooltip();\n    });\n    this.parentElement.addEventListener('mouseleave', _ => {\n      this.classList.remove('mce-visible');\n      this.originalPos.parent.insertBefore(this, this.originalPos.nextSibling);\n    });\n  }\n\n  _showTooltip() {\n    let parentBCR = this.originalPos.parent.getBoundingClientRect(); // relative to viewport\n    let body = document.body;\n    let docEl = document.documentElement;\n\n    let scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    let scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n    let clientTop = docEl.clientTop || body.clientTop || 0;\n    let clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n    let docPosTop = Math.round(parentBCR.top + scrollTop - clientTop);\n    let docPosLeft = Math.round(parentBCR.left + scrollLeft - clientLeft);\n\n    let top = docPosTop + parentBCR.height + 24;\n\n    this.style.top = top + 'px';\n    this.style.left = '';\n    this.style.right = '';\n\n    document.body.appendChild(this);\n    setTimeout(_ => {\n      let thisBCR = this.getBoundingClientRect(); // it needs time to calc this properly\n      let left = docPosLeft + parentBCR.width / 2 - thisBCR.width / 2;\n\n      if (left < 8) {\n        this.style.left = '8px';\n      } else if (left + thisBCR.width > document.body.clientWidth) {\n        this.style.right = '8px';\n      } else {\n        this.style.left = left + 'px';\n      }\n\n      this.classList.add('mce-visible');\n    }, 100);\n  }\n}\n\ncustomElements.define('mce-tooltip', Tooltip);\n\n//# sourceURL=webpack:///./src/tooltip/tooltip.js?");

/***/ }),

/***/ "./src/utils/attribute-related.js":
/*!****************************************!*\
  !*** ./src/utils/attribute-related.js ***!
  \****************************************/
/*! exports provided: observeAttrChange, parseAttributes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"observeAttrChange\", function() { return observeAttrChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseAttributes\", function() { return parseAttributes; });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./src/utils/index.js\");\n\n//\n// Collection of attribute related functions\n//\n\n/**\n * Observe attribute change and execute the given callback\n * @example\n *   observeAttrChange(el, (attr, val) => {\n *     if (attr === 'foo') {\n *       console.log('attribute', attr, 'is changed to', val);\n *     }\n *   }); \n */\nfunction observeAttrChange(el, callback) {\n  var observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.type === 'attributes') {\n        let newVal = mutation.target.getAttribute(mutation.attributeName);\n        callback(mutation.attributeName, newVal);\n      }\n    });\n  });\n  observer.observe(el, { attributes: true });\n  return observer;\n}\n\n/**\n * returns options and events from attributes\n */\nfunction parseAttributes(attributes, eventsRE = /^on-/) {\n  let options = {},\n      events = {};\n\n  Array.from(attributes).forEach(function (attr) {\n    if (attr.name.match(eventsRE)) {\n      let eventName = Object(_index_js__WEBPACK_IMPORTED_MODULE_0__[\"toCamelCase\"])(attr.name.replace(/^on-/, ''));\n      events[eventName] = function (event) {\n        let func = new Function('event', attr.value);\n        return func(event);\n      };\n    } else {\n      let optionName = Object(_index_js__WEBPACK_IMPORTED_MODULE_0__[\"toCamelCase\"])(attr.name);\n      options[optionName] = Object(_index_js__WEBPACK_IMPORTED_MODULE_0__[\"str2Val\"])(attr.value);\n    }\n  });\n\n  return { options, events };\n}\n\n//# sourceURL=webpack:///./src/utils/attribute-related.js?");

/***/ }),

/***/ "./src/utils/element-related.js":
/*!**************************************!*\
  !*** ./src/utils/element-related.js ***!
  \**************************************/
/*! exports provided: setTabbable, setInnerHTML */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setTabbable\", function() { return setTabbable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setInnerHTML\", function() { return setInnerHTML; });\n/** \n * set the given element tabbable by adding tabindex, and click/ENTER event\n * @example\n *   setTabbable(el, _ => this.inputEl.click());\n */\nfunction setTabbable(el, fn) {\n  if (el.getAttribute('tabindex')) {\n    el.addEventListener('keypress', function (event) {\n      if (event.key === ' ' || event.key === 'Enter') {\n        fn && fn();\n        event.preventDefault();\n      }\n    });\n  }\n}\n\n/** \n * set innerHTML of the element\n * it also executes <script>...</script> in addition to setting HTML\n * @example\n *   set innerHTML(el, '<script>alert(1)</script>')\n */\nfunction setInnerHTML(elm, html) {\n  elm.innerHTML = html;\n  Array.from(elm.querySelectorAll(\"script\")).forEach(function (el) {\n\n    let newEl = document.createElement(\"script\");\n    Array.from(el.attributes).forEach(function (el) {\n      newEl.setAttribute(el.name, el.value);\n    });\n\n    newEl.appendChild(document.createTextNode(el.innerHTML));\n    el.parentNode.replaceChild(newEl, el);\n  });\n}\n\n//# sourceURL=webpack:///./src/utils/element-related.js?");

/***/ }),

/***/ "./src/utils/index.js":
/*!****************************!*\
  !*** ./src/utils/index.js ***!
  \****************************/
/*! exports provided: observeAttrChange, parseAttributes, setTabbable, setInnerHTML, toCamelCase, str2Val, callSetMethod, waitUntil, windowResizeHandler, animate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _attribute_related_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./attribute-related.js */ \"./src/utils/attribute-related.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"observeAttrChange\", function() { return _attribute_related_js__WEBPACK_IMPORTED_MODULE_0__[\"observeAttrChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"parseAttributes\", function() { return _attribute_related_js__WEBPACK_IMPORTED_MODULE_0__[\"parseAttributes\"]; });\n\n/* harmony import */ var _element_related_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./element-related.js */ \"./src/utils/element-related.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setTabbable\", function() { return _element_related_js__WEBPACK_IMPORTED_MODULE_1__[\"setTabbable\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"setInnerHTML\", function() { return _element_related_js__WEBPACK_IMPORTED_MODULE_1__[\"setInnerHTML\"]; });\n\n/* harmony import */ var _pure_functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pure-functions.js */ \"./src/utils/pure-functions.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toCamelCase\", function() { return _pure_functions_js__WEBPACK_IMPORTED_MODULE_2__[\"toCamelCase\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"str2Val\", function() { return _pure_functions_js__WEBPACK_IMPORTED_MODULE_2__[\"str2Val\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"callSetMethod\", function() { return _pure_functions_js__WEBPACK_IMPORTED_MODULE_2__[\"callSetMethod\"]; });\n\n/* harmony import */ var _window_related_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./window-related.js */ \"./src/utils/window-related.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"waitUntil\", function() { return _window_related_js__WEBPACK_IMPORTED_MODULE_3__[\"waitUntil\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"windowResizeHandler\", function() { return _window_related_js__WEBPACK_IMPORTED_MODULE_3__[\"windowResizeHandler\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"animate\", function() { return _window_related_js__WEBPACK_IMPORTED_MODULE_3__[\"animate\"]; });\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/utils/index.js?");

/***/ }),

/***/ "./src/utils/pure-functions.js":
/*!*************************************!*\
  !*** ./src/utils/pure-functions.js ***!
  \*************************************/
/*! exports provided: toCamelCase, str2Val, callSetMethod */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toCamelCase\", function() { return toCamelCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"str2Val\", function() { return str2Val; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"callSetMethod\", function() { return callSetMethod; });\n/** returns camelCased string value */\nfunction toCamelCase(str) {\n  return str.replace(/-([mce-z])/gi, function (g) {\n    return g[1].toUpperCase();\n  });\n}\n\n/**\n * Returns Javascript value from string value\n * '1' -> 1\n * '-0.999' -> -0.999\n * '1,2' -> [1,2]\n * '[[1,2],[3.4]]' -> [[1,2],[3.4]]\n * 'foo.bar' -> 123\n * 'foo[\"bar\"]' -> 123\n */\nfunction str2Val(str, scope = window) {\n  if (!str) return str;\n\n  // return JSON-like string value from the given string {a: 1} -> {\"a\": 1};\n  function __jsonize(str) {\n    try {\n      JSON.parse(expr); // if va json, it will raise an exception\n      return str;\n    } catch (e) {\n      return str.replace(/([\\$\\w]+)\\s*:/g, // wrap keys without double quote\n      function (_, $1) {\n        return '\"' + $1 + '\":';\n      }).replace(/'([^']+)'/g, // replacing single quote to double quote\n      function (_, $1) {\n        return '\"' + $1 + '\"';\n      });\n    }\n  }\n\n  // retruns the revalue from string variable expression\n  // e.g.,  getScopeObj('foo.bar[\"x\"].y'); //returns window.foo.bar.x.y value\n  function __getScopedObj(str, scope) {\n    let obj = scope,\n        arr;\n    arr = str.split(/[\\[\\]\\.]/) // split by [,],.\n    .filter(el => el) // filter out empty one\n    .map(el => el.replace(/^['\"]+|['\"]+$/g, '')); // remove string quotation\n    if (arr.length > 1 && arr[0] !== str) {\n      arr.forEach(el => obj = obj[el]);\n      return obj;\n    } else {\n      return str;\n    }\n  }\n\n  // Normalize string value\n  let expr = str;\n  if (expr.match(/^[\\+\\-]?[0-9\\.]+,[ ]*\\ ?[\\+\\-]?[0-9\\.]+$/)) {\n    expr = '[' + str + ']';\n  }\n  expr = __jsonize(expr);\n\n  // Return value\n  try {\n    // if JSON parsable, return object\n    return JSON.parse(expr);\n  } catch (e) {\n    try {\n      // if variable, return variable value. e.g. 'foo.bar', foo['bar'];\n      expr = __getScopedObj(expr, scope);\n      return expr;\n    } catch (e) {\n      return expr; // return as it is e.g. 'hello'\n    }\n  }\n}\n\n/**\n * call obj.setXXX method with the given value\n*/\nfunction callSetMethod(obj, key, val) {\n  // name, val, excludes, applyTo, attrs\n  objApplyFunc = objApplyFunc || function () {\n    let funcName = toCamelCase('set-' + key);\n    let funcParam = str2Val(val);\n    obj[funcName] && obj[funcName](funcParam);\n  };\n}\n\n//# sourceURL=webpack:///./src/utils/pure-functions.js?");

/***/ }),

/***/ "./src/utils/window-related.js":
/*!*************************************!*\
  !*** ./src/utils/window-related.js ***!
  \*************************************/
/*! exports provided: waitUntil, windowResizeHandler, animate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"waitUntil\", function() { return waitUntil; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"windowResizeHandler\", function() { return windowResizeHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"animate\", function() { return animate; });\n/**\n * Returns promise when the given meets\n * @example\n *   waitUntil(_ => window.google.map)\n */\nfunction waitUntil(condition) {\n  if (typeof condition !== 'function') {\n    console.error('Invalid condition for waitUntil. It must be a function', condition);\n    throw \"invalid condition\";\n  }\n  return new Promise(function (resolve, reject) {\n    (function __wait(timeElapsed = 0, timeout = 5000) {\n      let result = condition();\n      if (result) {\n        return resolve(result);\n      } else if (timeElapsed > timeout) {\n        return reject('timeout');\n      }\n      setTimeout(function () {\n        __wait(timeElapsed + 100, timeout);\n      }, 100);\n    })();\n  });\n}\n\n/** \n * callback for window resize handler\n * this handler makes app bar, nav drawer, bottom bar behaves differently by setting mce-desktop\n * @example\n *   window.ce = {resizeHandler: windowResizeHandler};\n *   window.addEventListener('resize', window.ce.resizeHandler);\n *   window.addEventListener('load', window.ce.resizeHandler);v\n */\nfunction windowResizeHandler() {\n  if (window.innerWidth >= 1024) {\n    document.body.classList.add('mce-desktop');\n  } else {\n    document.body.classList.remove('mce-desktop');\n  }\n}\n\n/**\n * common function for Javascript animation\n * @example\n *   animate({\n *    duration: 450,\n *    timing: function(timeFraction) {\n *      return 1 - Math.sin(Math.acos(timeFraction));\n *    },\n *    draw: function(progress) {\n *      indicatorEl.style.left = indicatorFromPct + (progress*move) + '%';\n *    }\n *  });\n */\nfunction animate({ duration, draw, timing }) {\n  let start = performance.now();\n\n  requestAnimationFrame(function animate(time) {\n    let timeFraction = (time - start) / duration;\n    if (timeFraction > 1) timeFraction = 1;\n\n    let progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animate);\n    }\n  });\n}\n\n//# sourceURL=webpack:///./src/utils/window-related.js?");

/***/ })

/******/ });